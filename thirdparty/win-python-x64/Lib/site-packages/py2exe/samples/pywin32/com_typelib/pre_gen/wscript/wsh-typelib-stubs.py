# -*- coding: mbcs -*-

# This file is part of the py2exe pywin32\com_typelib\pre_gen\word sample.
# It was generated by the command-line:
# 'makepy.py -o wsh-typelib-stubs.py "Windows Script Host Object Model"'
# It will be included in the py2exe generated library and used by win32com
# at runtime in the generated program.
# The file has not been modified below this line:


# Created by makepy.py version 0.4.95
# By python version 2.4.4 (#71, Feb  5 2007, 15:24:39) [MSC v.1310 32 bit (Intel)]
# From type library 'wshom.ocx'
# On Mon Mar 26 14:31:22 2007
"""Windows Script Host Object Model"""
makepy_version = '0.4.95'
python_version = 0x20404f0

import win32com.client.CLSIDToClass, pythoncom
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}')
MajorVersion = 1
MinorVersion = 0
LibraryFlags = 8
LCID = 0x0

class constants:
	BinaryCompare                 =0x0        # from enum CompareMethod
	DatabaseCompare               =0x2        # from enum CompareMethod
	TextCompare                   =0x1        # from enum CompareMethod
	ForAppending                  =0x8        # from enum IOMode
	ForReading                    =0x1        # from enum IOMode
	ForWriting                    =0x2        # from enum IOMode
	TristateFalse                 =0x0        # from enum Tristate
	TristateMixed                 =-2         # from enum Tristate
	TristateTrue                  =-1         # from enum Tristate
	TristateUseDefault            =-2         # from enum Tristate
	Alias                         =0x400      # from enum __MIDL___MIDL_itf_iwshom_0000_0001
	Archive                       =0x20       # from enum __MIDL___MIDL_itf_iwshom_0000_0001
	Compressed                    =0x800      # from enum __MIDL___MIDL_itf_iwshom_0000_0001
	Directory                     =0x10       # from enum __MIDL___MIDL_itf_iwshom_0000_0001
	Hidden                        =0x2        # from enum __MIDL___MIDL_itf_iwshom_0000_0001
	Normal                        =0x0        # from enum __MIDL___MIDL_itf_iwshom_0000_0001
	ReadOnly                      =0x1        # from enum __MIDL___MIDL_itf_iwshom_0000_0001
	System                        =0x4        # from enum __MIDL___MIDL_itf_iwshom_0000_0001
	Volume                        =0x8        # from enum __MIDL___MIDL_itf_iwshom_0000_0001
	CDRom                         =0x4        # from enum __MIDL___MIDL_itf_iwshom_0000_0002
	Fixed                         =0x2        # from enum __MIDL___MIDL_itf_iwshom_0000_0002
	RamDisk                       =0x5        # from enum __MIDL___MIDL_itf_iwshom_0000_0002
	Remote                        =0x3        # from enum __MIDL___MIDL_itf_iwshom_0000_0002
	Removable                     =0x1        # from enum __MIDL___MIDL_itf_iwshom_0000_0002
	UnknownType                   =0x0        # from enum __MIDL___MIDL_itf_iwshom_0000_0002
	SystemFolder                  =0x1        # from enum __MIDL___MIDL_itf_iwshom_0000_0003
	TemporaryFolder               =0x2        # from enum __MIDL___MIDL_itf_iwshom_0000_0003
	WindowsFolder                 =0x0        # from enum __MIDL___MIDL_itf_iwshom_0000_0003
	StdErr                        =0x2        # from enum __MIDL___MIDL_itf_iwshom_0000_0004
	StdIn                         =0x0        # from enum __MIDL___MIDL_itf_iwshom_0000_0004
	StdOut                        =0x1        # from enum __MIDL___MIDL_itf_iwshom_0000_0004
	WshHide                       =0x0        # from enum __MIDL___MIDL_itf_iwshom_0119_0001
	WshMaximizedFocus             =0x3        # from enum __MIDL___MIDL_itf_iwshom_0119_0001
	WshMinimizedFocus             =0x2        # from enum __MIDL___MIDL_itf_iwshom_0119_0001
	WshMinimizedNoFocus           =0x6        # from enum __MIDL___MIDL_itf_iwshom_0119_0001
	WshNormalFocus                =0x1        # from enum __MIDL___MIDL_itf_iwshom_0119_0001
	WshNormalNoFocus              =0x4        # from enum __MIDL___MIDL_itf_iwshom_0119_0001
	WshFailed                     =0x2        # from enum __MIDL___MIDL_itf_iwshom_0128_0001
	WshFinished                   =0x1        # from enum __MIDL___MIDL_itf_iwshom_0128_0001
	WshRunning                    =0x0        # from enum __MIDL___MIDL_itf_iwshom_0128_0001

from win32com.client import DispatchBaseClass
class IDrive(DispatchBaseClass):
	CLSID = IID('{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_clsid = IID('{C7C3F5B1-88A3-11D0-ABCB-00A0C90FFFC0}')

	_prop_map_get_ = {
		"AvailableSpace": (10005, 2, (12, 0), (), "AvailableSpace", None),
		"DriveLetter": (10000, 2, (8, 0), (), "DriveLetter", None),
		"DriveType": (10002, 2, (3, 0), (), "DriveType", None),
		"FileSystem": (10008, 2, (8, 0), (), "FileSystem", None),
		"FreeSpace": (10004, 2, (12, 0), (), "FreeSpace", None),
		"IsReady": (10010, 2, (11, 0), (), "IsReady", None),
		"Path": (0, 2, (8, 0), (), "Path", None),
		# Method 'RootFolder' returns object of type 'IFolder'
		"RootFolder": (10003, 2, (9, 0), (), "RootFolder", '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}'),
		"SerialNumber": (10009, 2, (3, 0), (), "SerialNumber", None),
		"ShareName": (10001, 2, (8, 0), (), "ShareName", None),
		"TotalSize": (10006, 2, (12, 0), (), "TotalSize", None),
		"VolumeName": (10007, 2, (8, 0), (), "VolumeName", None),
	}
	_prop_map_put_ = {
		"VolumeName": ((10007, LCID, 4, 0),()),
	}
	# Default property for this class is 'Path'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Path", None))
	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))

class IDriveCollection(DispatchBaseClass):
	CLSID = IID('{C7C3F5A1-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_clsid = IID('{C7C3F5B2-88A3-11D0-ABCB-00A0C90FFFC0}')

	# Result is of type IDrive
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Key=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Key
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Key=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Key
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		return win32com.client.util.Iterator(ob)
	def _NewEnum(self):
		"Create an enumerator from this object"
		return win32com.client.util.WrapEnum(self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),()),'{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}')
	def __getitem__(self, index):
		"Allow this class to be accessed as a collection"
		if not self.__dict__.has_key('_enum_'):
			self.__dict__['_enum_'] = self._NewEnum()
		return self._enum_.__getitem__(index)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IFile(DispatchBaseClass):
	CLSID = IID('{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_clsid = IID('{C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0}')

	def Copy(self, Destination=defaultNamedNotOptArg, OverWriteFiles=True):
		return self._oleobj_.InvokeTypes(1202, LCID, 1, (24, 0), ((8, 1), (11, 49)),Destination
			, OverWriteFiles)

	def Delete(self, Force=False):
		return self._oleobj_.InvokeTypes(1200, LCID, 1, (24, 0), ((11, 49),),Force
			)

	def Move(self, Destination=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1204, LCID, 1, (24, 0), ((8, 1),),Destination
			)

	# Result is of type ITextStream
	def OpenAsTextStream(self, IOMode=1, Format=0):
		ret = self._oleobj_.InvokeTypes(1100, LCID, 1, (9, 0), ((3, 49), (3, 49)),IOMode
			, Format)
		if ret is not None:
			ret = Dispatch(ret, 'OpenAsTextStream', '{53BAD8C1-E718-11CF-893D-00A0C9054228}', UnicodeToString=0)
		return ret

	_prop_map_get_ = {
		"Attributes": (1003, 2, (3, 0), (), "Attributes", None),
		"DateCreated": (1006, 2, (7, 0), (), "DateCreated", None),
		"DateLastAccessed": (1008, 2, (7, 0), (), "DateLastAccessed", None),
		"DateLastModified": (1007, 2, (7, 0), (), "DateLastModified", None),
		# Method 'Drive' returns object of type 'IDrive'
		"Drive": (1004, 2, (9, 0), (), "Drive", '{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}'),
		"Name": (1000, 2, (8, 0), (), "Name", None),
		# Method 'ParentFolder' returns object of type 'IFolder'
		"ParentFolder": (1005, 2, (9, 0), (), "ParentFolder", '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}'),
		"Path": (0, 2, (8, 0), (), "Path", None),
		"ShortName": (1001, 2, (8, 0), (), "ShortName", None),
		"ShortPath": (1002, 2, (8, 0), (), "ShortPath", None),
		"Size": (1009, 2, (12, 0), (), "Size", None),
		"Type": (1010, 2, (8, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Attributes": ((1003, LCID, 4, 0),()),
		"Name": ((1000, LCID, 4, 0),()),
	}
	# Default property for this class is 'Path'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Path", None))
	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))

class IFileCollection(DispatchBaseClass):
	CLSID = IID('{C7C3F5A5-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_clsid = IID('{C7C3F5B6-88A3-11D0-ABCB-00A0C90FFFC0}')

	# Result is of type IFile
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Key=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Key
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Key=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Key
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		return win32com.client.util.Iterator(ob)
	def _NewEnum(self):
		"Create an enumerator from this object"
		return win32com.client.util.WrapEnum(self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),()),'{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}')
	def __getitem__(self, index):
		"Allow this class to be accessed as a collection"
		if not self.__dict__.has_key('_enum_'):
			self.__dict__['_enum_'] = self._NewEnum()
		return self._enum_.__getitem__(index)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IFileSystem(DispatchBaseClass):
	CLSID = IID('{0AB5A3D0-E5B6-11D0-ABF5-00A0C90FFFC0}')
	coclass_clsid = None

	def BuildPath(self, Path=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10000, LCID, 1, (8, 0), ((8, 1), (8, 1)),Path
			, Name)

	def CopyFile(self, Source=defaultNamedNotOptArg, Destination=defaultNamedNotOptArg, OverWriteFiles=True):
		return self._oleobj_.InvokeTypes(1202, LCID, 1, (24, 0), ((8, 1), (8, 1), (11, 49)),Source
			, Destination, OverWriteFiles)

	def CopyFolder(self, Source=defaultNamedNotOptArg, Destination=defaultNamedNotOptArg, OverWriteFiles=True):
		return self._oleobj_.InvokeTypes(1203, LCID, 1, (24, 0), ((8, 1), (8, 1), (11, 49)),Source
			, Destination, OverWriteFiles)

	# Result is of type IFolder
	def CreateFolder(self, Path=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1120, LCID, 1, (9, 0), ((8, 1),),Path
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateFolder', '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	# Result is of type ITextStream
	def CreateTextFile(self, FileName=defaultNamedNotOptArg, Overwrite=True, Unicode=False):
		ret = self._oleobj_.InvokeTypes(1101, LCID, 1, (9, 0), ((8, 1), (11, 49), (11, 49)),FileName
			, Overwrite, Unicode)
		if ret is not None:
			ret = Dispatch(ret, 'CreateTextFile', '{53BAD8C1-E718-11CF-893D-00A0C9054228}', UnicodeToString=0)
		return ret

	def DeleteFile(self, FileSpec=defaultNamedNotOptArg, Force=False):
		return self._oleobj_.InvokeTypes(1200, LCID, 1, (24, 0), ((8, 1), (11, 49)),FileSpec
			, Force)

	def DeleteFolder(self, FolderSpec=defaultNamedNotOptArg, Force=False):
		return self._oleobj_.InvokeTypes(1201, LCID, 1, (24, 0), ((8, 1), (11, 49)),FolderSpec
			, Force)

	def DriveExists(self, DriveSpec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10015, LCID, 1, (11, 0), ((8, 1),),DriveSpec
			)

	def FileExists(self, FileSpec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10016, LCID, 1, (11, 0), ((8, 1),),FileSpec
			)

	def FolderExists(self, FolderSpec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10017, LCID, 1, (11, 0), ((8, 1),),FolderSpec
			)

	def GetAbsolutePathName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10002, LCID, 1, (8, 0), ((8, 1),),Path
			)

	def GetBaseName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10007, LCID, 1, (8, 0), ((8, 1),),Path
			)

	# Result is of type IDrive
	def GetDrive(self, DriveSpec=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(10011, LCID, 1, (9, 0), ((8, 1),),DriveSpec
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDrive', '{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	def GetDriveName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10004, LCID, 1, (8, 0), ((8, 1),),Path
			)

	def GetExtensionName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10008, LCID, 1, (8, 0), ((8, 1),),Path
			)

	# Result is of type IFile
	def GetFile(self, FilePath=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(10012, LCID, 1, (9, 0), ((8, 1),),FilePath
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFile', '{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	def GetFileName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10006, LCID, 1, (8, 0), ((8, 1),),Path
			)

	# Result is of type IFolder
	def GetFolder(self, FolderPath=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(10013, LCID, 1, (9, 0), ((8, 1),),FolderPath
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFolder', '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	def GetParentFolderName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10005, LCID, 1, (8, 0), ((8, 1),),Path
			)

	# Result is of type IFolder
	def GetSpecialFolder(self, SpecialFolder=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(10014, LCID, 1, (9, 0), ((3, 1),),SpecialFolder
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSpecialFolder', '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	def GetTempName(self):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10003, LCID, 1, (8, 0), (),)

	def MoveFile(self, Source=defaultNamedNotOptArg, Destination=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1204, LCID, 1, (24, 0), ((8, 1), (8, 1)),Source
			, Destination)

	def MoveFolder(self, Source=defaultNamedNotOptArg, Destination=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1205, LCID, 1, (24, 0), ((8, 1), (8, 1)),Source
			, Destination)

	# Result is of type ITextStream
	def OpenTextFile(self, FileName=defaultNamedNotOptArg, IOMode=1, Create=False, Format=0):
		ret = self._oleobj_.InvokeTypes(1100, LCID, 1, (9, 0), ((8, 1), (3, 49), (11, 49), (3, 49)),FileName
			, IOMode, Create, Format)
		if ret is not None:
			ret = Dispatch(ret, 'OpenTextFile', '{53BAD8C1-E718-11CF-893D-00A0C9054228}', UnicodeToString=0)
		return ret

	_prop_map_get_ = {
		# Method 'Drives' returns object of type 'IDriveCollection'
		"Drives": (10010, 2, (9, 0), (), "Drives", '{C7C3F5A1-88A3-11D0-ABCB-00A0C90FFFC0}'),
	}
	_prop_map_put_ = {
	}

class IFileSystem3(DispatchBaseClass):
	CLSID = IID('{2A0B9D10-4B87-11D3-A97A-00104B365C9F}')
	coclass_clsid = IID('{0D43FE01-F093-11CF-8940-00A0C9054228}')

	def BuildPath(self, Path=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10000, LCID, 1, (8, 0), ((8, 1), (8, 1)),Path
			, Name)

	def CopyFile(self, Source=defaultNamedNotOptArg, Destination=defaultNamedNotOptArg, OverWriteFiles=True):
		return self._oleobj_.InvokeTypes(1202, LCID, 1, (24, 0), ((8, 1), (8, 1), (11, 49)),Source
			, Destination, OverWriteFiles)

	def CopyFolder(self, Source=defaultNamedNotOptArg, Destination=defaultNamedNotOptArg, OverWriteFiles=True):
		return self._oleobj_.InvokeTypes(1203, LCID, 1, (24, 0), ((8, 1), (8, 1), (11, 49)),Source
			, Destination, OverWriteFiles)

	# Result is of type IFolder
	def CreateFolder(self, Path=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1120, LCID, 1, (9, 0), ((8, 1),),Path
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateFolder', '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	# Result is of type ITextStream
	def CreateTextFile(self, FileName=defaultNamedNotOptArg, Overwrite=True, Unicode=False):
		ret = self._oleobj_.InvokeTypes(1101, LCID, 1, (9, 0), ((8, 1), (11, 49), (11, 49)),FileName
			, Overwrite, Unicode)
		if ret is not None:
			ret = Dispatch(ret, 'CreateTextFile', '{53BAD8C1-E718-11CF-893D-00A0C9054228}', UnicodeToString=0)
		return ret

	def DeleteFile(self, FileSpec=defaultNamedNotOptArg, Force=False):
		return self._oleobj_.InvokeTypes(1200, LCID, 1, (24, 0), ((8, 1), (11, 49)),FileSpec
			, Force)

	def DeleteFolder(self, FolderSpec=defaultNamedNotOptArg, Force=False):
		return self._oleobj_.InvokeTypes(1201, LCID, 1, (24, 0), ((8, 1), (11, 49)),FolderSpec
			, Force)

	def DriveExists(self, DriveSpec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10015, LCID, 1, (11, 0), ((8, 1),),DriveSpec
			)

	def FileExists(self, FileSpec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10016, LCID, 1, (11, 0), ((8, 1),),FileSpec
			)

	def FolderExists(self, FolderSpec=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10017, LCID, 1, (11, 0), ((8, 1),),FolderSpec
			)

	def GetAbsolutePathName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10002, LCID, 1, (8, 0), ((8, 1),),Path
			)

	def GetBaseName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10007, LCID, 1, (8, 0), ((8, 1),),Path
			)

	# Result is of type IDrive
	def GetDrive(self, DriveSpec=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(10011, LCID, 1, (9, 0), ((8, 1),),DriveSpec
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDrive', '{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	def GetDriveName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10004, LCID, 1, (8, 0), ((8, 1),),Path
			)

	def GetExtensionName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10008, LCID, 1, (8, 0), ((8, 1),),Path
			)

	# Result is of type IFile
	def GetFile(self, FilePath=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(10012, LCID, 1, (9, 0), ((8, 1),),FilePath
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFile', '{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	def GetFileName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10006, LCID, 1, (8, 0), ((8, 1),),Path
			)

	def GetFileVersion(self, FileName=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(20010, LCID, 1, (8, 0), ((8, 1),),FileName
			)

	# Result is of type IFolder
	def GetFolder(self, FolderPath=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(10013, LCID, 1, (9, 0), ((8, 1),),FolderPath
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFolder', '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	def GetParentFolderName(self, Path=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10005, LCID, 1, (8, 0), ((8, 1),),Path
			)

	# Result is of type IFolder
	def GetSpecialFolder(self, SpecialFolder=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(10014, LCID, 1, (9, 0), ((3, 1),),SpecialFolder
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSpecialFolder', '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	# Result is of type ITextStream
	def GetStandardStream(self, StandardStreamType=defaultNamedNotOptArg, Unicode=False):
		ret = self._oleobj_.InvokeTypes(20000, LCID, 1, (9, 0), ((3, 1), (11, 49)),StandardStreamType
			, Unicode)
		if ret is not None:
			ret = Dispatch(ret, 'GetStandardStream', '{53BAD8C1-E718-11CF-893D-00A0C9054228}', UnicodeToString=0)
		return ret

	def GetTempName(self):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10003, LCID, 1, (8, 0), (),)

	def MoveFile(self, Source=defaultNamedNotOptArg, Destination=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1204, LCID, 1, (24, 0), ((8, 1), (8, 1)),Source
			, Destination)

	def MoveFolder(self, Source=defaultNamedNotOptArg, Destination=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1205, LCID, 1, (24, 0), ((8, 1), (8, 1)),Source
			, Destination)

	# Result is of type ITextStream
	def OpenTextFile(self, FileName=defaultNamedNotOptArg, IOMode=1, Create=False, Format=0):
		ret = self._oleobj_.InvokeTypes(1100, LCID, 1, (9, 0), ((8, 1), (3, 49), (11, 49), (3, 49)),FileName
			, IOMode, Create, Format)
		if ret is not None:
			ret = Dispatch(ret, 'OpenTextFile', '{53BAD8C1-E718-11CF-893D-00A0C9054228}', UnicodeToString=0)
		return ret

	_prop_map_get_ = {
		# Method 'Drives' returns object of type 'IDriveCollection'
		"Drives": (10010, 2, (9, 0), (), "Drives", '{C7C3F5A1-88A3-11D0-ABCB-00A0C90FFFC0}'),
	}
	_prop_map_put_ = {
	}

class IFolder(DispatchBaseClass):
	CLSID = IID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_clsid = IID('{C7C3F5B3-88A3-11D0-ABCB-00A0C90FFFC0}')

	def Copy(self, Destination=defaultNamedNotOptArg, OverWriteFiles=True):
		return self._oleobj_.InvokeTypes(1203, LCID, 1, (24, 0), ((8, 1), (11, 49)),Destination
			, OverWriteFiles)

	# Result is of type ITextStream
	def CreateTextFile(self, FileName=defaultNamedNotOptArg, Overwrite=True, Unicode=False):
		ret = self._oleobj_.InvokeTypes(1101, LCID, 1, (9, 0), ((8, 1), (11, 49), (11, 49)),FileName
			, Overwrite, Unicode)
		if ret is not None:
			ret = Dispatch(ret, 'CreateTextFile', '{53BAD8C1-E718-11CF-893D-00A0C9054228}', UnicodeToString=0)
		return ret

	def Delete(self, Force=False):
		return self._oleobj_.InvokeTypes(1201, LCID, 1, (24, 0), ((11, 49),),Force
			)

	def Move(self, Destination=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1205, LCID, 1, (24, 0), ((8, 1),),Destination
			)

	_prop_map_get_ = {
		"Attributes": (1003, 2, (3, 0), (), "Attributes", None),
		"DateCreated": (1006, 2, (7, 0), (), "DateCreated", None),
		"DateLastAccessed": (1008, 2, (7, 0), (), "DateLastAccessed", None),
		"DateLastModified": (1007, 2, (7, 0), (), "DateLastModified", None),
		# Method 'Drive' returns object of type 'IDrive'
		"Drive": (1004, 2, (9, 0), (), "Drive", '{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}'),
		# Method 'Files' returns object of type 'IFileCollection'
		"Files": (10002, 2, (9, 0), (), "Files", '{C7C3F5A5-88A3-11D0-ABCB-00A0C90FFFC0}'),
		"IsRootFolder": (10000, 2, (11, 0), (), "IsRootFolder", None),
		"Name": (1000, 2, (8, 0), (), "Name", None),
		# Method 'ParentFolder' returns object of type 'IFolder'
		"ParentFolder": (1005, 2, (9, 0), (), "ParentFolder", '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}'),
		"Path": (0, 2, (8, 0), (), "Path", None),
		"ShortName": (1001, 2, (8, 0), (), "ShortName", None),
		"ShortPath": (1002, 2, (8, 0), (), "ShortPath", None),
		"Size": (1009, 2, (12, 0), (), "Size", None),
		# Method 'SubFolders' returns object of type 'IFolderCollection'
		"SubFolders": (10001, 2, (9, 0), (), "SubFolders", '{C7C3F5A3-88A3-11D0-ABCB-00A0C90FFFC0}'),
		"Type": (1010, 2, (8, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Attributes": ((1003, LCID, 4, 0),()),
		"Name": ((1000, LCID, 4, 0),()),
	}
	# Default property for this class is 'Path'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Path", None))
	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))

class IFolderCollection(DispatchBaseClass):
	CLSID = IID('{C7C3F5A3-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_clsid = IID('{C7C3F5B4-88A3-11D0-ABCB-00A0C90FFFC0}')

	# Result is of type IFolder
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	# Result is of type IFolder
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Key=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Key
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Key=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Key
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}', UnicodeToString=0)
		return ret

	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		return win32com.client.util.Iterator(ob)
	def _NewEnum(self):
		"Create an enumerator from this object"
		return win32com.client.util.WrapEnum(self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),()),'{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')
	def __getitem__(self, index):
		"Allow this class to be accessed as a collection"
		if not self.__dict__.has_key('_enum_'):
			self.__dict__['_enum_'] = self._NewEnum()
		return self._enum_.__getitem__(index)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITextStream(DispatchBaseClass):
	CLSID = IID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')
	coclass_clsid = IID('{0BB02EC0-EF49-11CF-8940-00A0C9054228}')

	def Close(self):
		return self._oleobj_.InvokeTypes(10012, LCID, 1, (24, 0), (),)

	def Read(self, Characters=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10004, LCID, 1, (8, 0), ((3, 1),),Characters
			)

	def ReadAll(self):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10006, LCID, 1, (8, 0), (),)

	def ReadLine(self):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(10005, LCID, 1, (8, 0), (),)

	def Skip(self, Characters=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10010, LCID, 1, (24, 0), ((3, 1),),Characters
			)

	def SkipLine(self):
		return self._oleobj_.InvokeTypes(10011, LCID, 1, (24, 0), (),)

	def Write(self, Text=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10007, LCID, 1, (24, 0), ((8, 1),),Text
			)

	def WriteBlankLines(self, Lines=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10009, LCID, 1, (24, 0), ((3, 1),),Lines
			)

	def WriteLine(self, Text=''):
		return self._ApplyTypes_(10008, 1, (24, 32), ((8, 49),), 'WriteLine', None,Text
			)

	_prop_map_get_ = {
		"AtEndOfLine": (10003, 2, (11, 0), (), "AtEndOfLine", None),
		"AtEndOfStream": (10002, 2, (11, 0), (), "AtEndOfStream", None),
		"Column": (-529, 2, (3, 0), (), "Column", None),
		"Line": (10000, 2, (3, 0), (), "Line", None),
	}
	_prop_map_put_ = {
	}

class IWshCollection(DispatchBaseClass):
	"""Generic Collection Object"""
	CLSID = IID('{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_clsid = IID('{F935DC28-1CF0-11D0-ADB9-00C04FD58A0B}')

	def Count(self):
		return self._oleobj_.InvokeTypes(1, LCID, 1, (3, 0), (),)

	def Item(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(0, 1, (12, 0), ((16396, 1),), 'Item', None,Index
			)

	_prop_map_get_ = {
		"length": (2, 2, (3, 0), (), "length", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(0, 1, (12, 0), ((16396, 1),), '__call__', None,Index
			)

	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		return win32com.client.util.Iterator(ob)
	def _NewEnum(self):
		"Create an enumerator from this object"
		return win32com.client.util.WrapEnum(self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),()),None)
	def __getitem__(self, index):
		"Allow this class to be accessed as a collection"
		if not self.__dict__.has_key('_enum_'):
			self.__dict__['_enum_'] = self._NewEnum()
		return self._enum_.__getitem__(index)
	#This class has Count() method - allow len(ob) to provide this
	def __len__(self):
		return self._oleobj_.InvokeTypes(1, LCID, 1, (3, 0), (),)

	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IWshEnvironment(DispatchBaseClass):
	"""Environment Variables Collection Object"""
	CLSID = IID('{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_clsid = IID('{F935DC2A-1CF0-11D0-ADB9-00C04FD58A0B}')

	def Count(self):
		return self._oleobj_.InvokeTypes(1, LCID, 1, (3, 0), (),)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Name=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((8, 1),),Name
			)

	def Remove(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1001, LCID, 1, (24, 0), ((8, 1),),Name
			)

	# The method SetItem is actually a property, but must be used as a method to correctly pass the arguments
	def SetItem(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(0, LCID, 4, (24, 0), ((8, 1), (8, 1)),Name
			, arg1)

	_prop_map_get_ = {
		"length": (2, 2, (3, 0), (), "length", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Name=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((8, 1),),Name
			)

	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		return win32com.client.util.Iterator(ob)
	def _NewEnum(self):
		"Create an enumerator from this object"
		return win32com.client.util.WrapEnum(self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),()),None)
	def __getitem__(self, index):
		"Allow this class to be accessed as a collection"
		if not self.__dict__.has_key('_enum_'):
			self.__dict__['_enum_'] = self._NewEnum()
		return self._enum_.__getitem__(index)
	#This class has Count() method - allow len(ob) to provide this
	def __len__(self):
		return self._oleobj_.InvokeTypes(1, LCID, 1, (3, 0), (),)

	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IWshExec(DispatchBaseClass):
	"""WSH Exec Object"""
	CLSID = IID('{08FED190-BE19-11D3-A28B-00104BD35090}')
	coclass_clsid = IID('{08FED191-BE19-11D3-A28B-00104BD35090}')

	def Terminate(self):
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"ExitCode": (7, 2, (3, 0), (), "ExitCode", None),
		"ProcessID": (6, 2, (3, 0), (), "ProcessID", None),
		"Status": (1, 2, (3, 0), (), "Status", None),
		# Method 'StdErr' returns object of type 'ITextStream'
		"StdErr": (5, 2, (9, 0), (), "StdErr", '{53BAD8C1-E718-11CF-893D-00A0C9054228}'),
		# Method 'StdIn' returns object of type 'ITextStream'
		"StdIn": (3, 2, (9, 0), (), "StdIn", '{53BAD8C1-E718-11CF-893D-00A0C9054228}'),
		# Method 'StdOut' returns object of type 'ITextStream'
		"StdOut": (4, 2, (9, 0), (), "StdOut", '{53BAD8C1-E718-11CF-893D-00A0C9054228}'),
	}
	_prop_map_put_ = {
	}

class IWshNetwork(DispatchBaseClass):
	"""Network Object"""
	CLSID = IID('{F935DC25-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_clsid = None

	def AddPrinterConnection(self, LocalName=defaultNamedNotOptArg, RemoteName=defaultNamedNotOptArg, UpdateProfile=defaultNamedOptArg, UserName=defaultNamedOptArg
			, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2000, LCID, 1, (24, 0), ((8, 1), (8, 1), (16396, 17), (16396, 17), (16396, 17)),LocalName
			, RemoteName, UpdateProfile, UserName, Password)

	# Result is of type IWshCollection
	def EnumNetworkDrives(self):
		ret = self._oleobj_.InvokeTypes(1002, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'EnumNetworkDrives', '{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}', UnicodeToString=0)
		return ret

	# Result is of type IWshCollection
	def EnumPrinterConnections(self):
		ret = self._oleobj_.InvokeTypes(2002, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'EnumPrinterConnections', '{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}', UnicodeToString=0)
		return ret

	def MapNetworkDrive(self, LocalName=defaultNamedNotOptArg, RemoteName=defaultNamedNotOptArg, UpdateProfile=defaultNamedOptArg, UserName=defaultNamedOptArg
			, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1000, LCID, 1, (24, 0), ((8, 1), (8, 1), (16396, 17), (16396, 17), (16396, 17)),LocalName
			, RemoteName, UpdateProfile, UserName, Password)

	def RemoveNetworkDrive(self, Name=defaultNamedNotOptArg, Force=defaultNamedOptArg, UpdateProfile=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1001, LCID, 1, (24, 0), ((8, 1), (16396, 17), (16396, 17)),Name
			, Force, UpdateProfile)

	def RemovePrinterConnection(self, Name=defaultNamedNotOptArg, Force=defaultNamedOptArg, UpdateProfile=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2001, LCID, 1, (24, 0), ((8, 1), (16396, 17), (16396, 17)),Name
			, Force, UpdateProfile)

	def SetDefaultPrinter(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2003, LCID, 1, (24, 0), ((8, 1),),Name
			)

	_prop_map_get_ = {
		"ComputerName": (1610743811, 2, (8, 0), (), "ComputerName", None),
		"Organization": (1610743812, 2, (8, 0), (), "Organization", None),
		"Site": (1610743813, 2, (8, 0), (), "Site", None),
		"UserDomain": (1610743808, 2, (8, 0), (), "UserDomain", None),
		"UserName": (1610743809, 2, (8, 0), (), "UserName", None),
		"UserProfile": (1610743810, 2, (8, 0), (), "UserProfile", None),
	}
	_prop_map_put_ = {
	}

class IWshNetwork2(DispatchBaseClass):
	"""Network Object"""
	CLSID = IID('{24BE5A31-EDFE-11D2-B933-00104B365C9F}')
	coclass_clsid = IID('{F935DC26-1CF0-11D0-ADB9-00C04FD58A0B}')

	def AddPrinterConnection(self, LocalName=defaultNamedNotOptArg, RemoteName=defaultNamedNotOptArg, UpdateProfile=defaultNamedOptArg, UserName=defaultNamedOptArg
			, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2000, LCID, 1, (24, 0), ((8, 1), (8, 1), (16396, 17), (16396, 17), (16396, 17)),LocalName
			, RemoteName, UpdateProfile, UserName, Password)

	def AddWindowsPrinterConnection(self, PrinterName=defaultNamedNotOptArg, DriverName='', Port='LPT1'):
		return self._ApplyTypes_(2004, 1, (24, 32), ((8, 1), (8, 49), (8, 49)), 'AddWindowsPrinterConnection', None,PrinterName
			, DriverName, Port)

	# Result is of type IWshCollection
	def EnumNetworkDrives(self):
		ret = self._oleobj_.InvokeTypes(1002, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'EnumNetworkDrives', '{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}', UnicodeToString=0)
		return ret

	# Result is of type IWshCollection
	def EnumPrinterConnections(self):
		ret = self._oleobj_.InvokeTypes(2002, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'EnumPrinterConnections', '{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}', UnicodeToString=0)
		return ret

	def MapNetworkDrive(self, LocalName=defaultNamedNotOptArg, RemoteName=defaultNamedNotOptArg, UpdateProfile=defaultNamedOptArg, UserName=defaultNamedOptArg
			, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1000, LCID, 1, (24, 0), ((8, 1), (8, 1), (16396, 17), (16396, 17), (16396, 17)),LocalName
			, RemoteName, UpdateProfile, UserName, Password)

	def RemoveNetworkDrive(self, Name=defaultNamedNotOptArg, Force=defaultNamedOptArg, UpdateProfile=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1001, LCID, 1, (24, 0), ((8, 1), (16396, 17), (16396, 17)),Name
			, Force, UpdateProfile)

	def RemovePrinterConnection(self, Name=defaultNamedNotOptArg, Force=defaultNamedOptArg, UpdateProfile=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2001, LCID, 1, (24, 0), ((8, 1), (16396, 17), (16396, 17)),Name
			, Force, UpdateProfile)

	def SetDefaultPrinter(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2003, LCID, 1, (24, 0), ((8, 1),),Name
			)

	_prop_map_get_ = {
		"ComputerName": (1610743811, 2, (8, 0), (), "ComputerName", None),
		"Organization": (1610743812, 2, (8, 0), (), "Organization", None),
		"Site": (1610743813, 2, (8, 0), (), "Site", None),
		"UserDomain": (1610743808, 2, (8, 0), (), "UserDomain", None),
		"UserName": (1610743809, 2, (8, 0), (), "UserName", None),
		"UserProfile": (1610743810, 2, (8, 0), (), "UserProfile", None),
	}
	_prop_map_put_ = {
	}

class IWshShell(DispatchBaseClass):
	"""Shell Object Interface"""
	CLSID = IID('{F935DC21-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_clsid = None

	def CreateShortcut(self, PathLink=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1002, LCID, 1, (9, 0), ((8, 1),),PathLink
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateShortcut', None, UnicodeToString=0)
		return ret

	def ExpandEnvironmentStrings(self, Src=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(1006, LCID, 1, (8, 0), ((8, 1),),Src
			)

	# Result is of type IWshEnvironment
	# The method GetEnvironment is actually a property, but must be used as a method to correctly pass the arguments
	def GetEnvironment(self, Type=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(200, LCID, 2, (9, 0), ((16396, 17),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetEnvironment', '{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}', UnicodeToString=0)
		return ret

	def Popup(self, Text=defaultNamedNotOptArg, SecondsToWait=defaultNamedOptArg, Title=defaultNamedOptArg, Type=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1001, LCID, 1, (3, 0), ((8, 1), (16396, 17), (16396, 17), (16396, 17)),Text
			, SecondsToWait, Title, Type)

	def RegDelete(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2002, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def RegRead(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(2000, 1, (12, 0), ((8, 1),), 'RegRead', None,Name
			)

	def RegWrite(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, Type=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2001, LCID, 1, (24, 0), ((8, 1), (16396, 1), (16396, 17)),Name
			, Value, Type)

	def Run(self, Command=defaultNamedNotOptArg, WindowStyle=defaultNamedOptArg, WaitOnReturn=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1000, LCID, 1, (3, 0), ((8, 1), (16396, 17), (16396, 17)),Command
			, WindowStyle, WaitOnReturn)

	_prop_map_get_ = {
		# Method 'Environment' returns object of type 'IWshEnvironment'
		"Environment": (200, 2, (9, 0), ((16396, 17),), "Environment", '{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}'),
		# Method 'SpecialFolders' returns object of type 'IWshCollection'
		"SpecialFolders": (100, 2, (9, 0), (), "SpecialFolders", '{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}'),
	}
	_prop_map_put_ = {
	}

class IWshShell2(DispatchBaseClass):
	"""Shell Object Interface"""
	CLSID = IID('{24BE5A30-EDFE-11D2-B933-00104B365C9F}')
	coclass_clsid = None

	def AppActivate(self, App=defaultNamedNotOptArg, Wait=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3010, LCID, 1, (11, 0), ((16396, 1), (16396, 17)),App
			, Wait)

	def CreateShortcut(self, PathLink=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1002, LCID, 1, (9, 0), ((8, 1),),PathLink
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateShortcut', None, UnicodeToString=0)
		return ret

	def ExpandEnvironmentStrings(self, Src=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(1006, LCID, 1, (8, 0), ((8, 1),),Src
			)

	# Result is of type IWshEnvironment
	# The method GetEnvironment is actually a property, but must be used as a method to correctly pass the arguments
	def GetEnvironment(self, Type=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(200, LCID, 2, (9, 0), ((16396, 17),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetEnvironment', '{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}', UnicodeToString=0)
		return ret

	def LogEvent(self, Type=defaultNamedNotOptArg, Message=defaultNamedNotOptArg, Target=''):
		return self._ApplyTypes_(3000, 1, (11, 32), ((16396, 1), (8, 1), (8, 49)), 'LogEvent', None,Type
			, Message, Target)

	def Popup(self, Text=defaultNamedNotOptArg, SecondsToWait=defaultNamedOptArg, Title=defaultNamedOptArg, Type=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1001, LCID, 1, (3, 0), ((8, 1), (16396, 17), (16396, 17), (16396, 17)),Text
			, SecondsToWait, Title, Type)

	def RegDelete(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2002, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def RegRead(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(2000, 1, (12, 0), ((8, 1),), 'RegRead', None,Name
			)

	def RegWrite(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, Type=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2001, LCID, 1, (24, 0), ((8, 1), (16396, 1), (16396, 17)),Name
			, Value, Type)

	def Run(self, Command=defaultNamedNotOptArg, WindowStyle=defaultNamedOptArg, WaitOnReturn=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1000, LCID, 1, (3, 0), ((8, 1), (16396, 17), (16396, 17)),Command
			, WindowStyle, WaitOnReturn)

	def SendKeys(self, Keys=defaultNamedNotOptArg, Wait=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3011, LCID, 1, (24, 0), ((8, 1), (16396, 17)),Keys
			, Wait)

	_prop_map_get_ = {
		# Method 'Environment' returns object of type 'IWshEnvironment'
		"Environment": (200, 2, (9, 0), ((16396, 17),), "Environment", '{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}'),
		# Method 'SpecialFolders' returns object of type 'IWshCollection'
		"SpecialFolders": (100, 2, (9, 0), (), "SpecialFolders", '{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}'),
	}
	_prop_map_put_ = {
	}

class IWshShell3(DispatchBaseClass):
	"""Shell Object Interface"""
	CLSID = IID('{41904400-BE18-11D3-A28B-00104BD35090}')
	coclass_clsid = IID('{F935DC22-1CF0-11D0-ADB9-00C04FD58A0B}')

	def AppActivate(self, App=defaultNamedNotOptArg, Wait=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3010, LCID, 1, (11, 0), ((16396, 1), (16396, 17)),App
			, Wait)

	def CreateShortcut(self, PathLink=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1002, LCID, 1, (9, 0), ((8, 1),),PathLink
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateShortcut', None, UnicodeToString=0)
		return ret

	# Result is of type IWshExec
	def Exec(self, Command=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(3012, LCID, 1, (9, 0), ((8, 1),),Command
			)
		if ret is not None:
			ret = Dispatch(ret, 'Exec', '{08FED190-BE19-11D3-A28B-00104BD35090}', UnicodeToString=0)
		return ret

	def ExpandEnvironmentStrings(self, Src=defaultNamedNotOptArg):
		# Result is a Unicode object - return as-is for this version of Python
		return self._oleobj_.InvokeTypes(1006, LCID, 1, (8, 0), ((8, 1),),Src
			)

	# Result is of type IWshEnvironment
	# The method GetEnvironment is actually a property, but must be used as a method to correctly pass the arguments
	def GetEnvironment(self, Type=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(200, LCID, 2, (9, 0), ((16396, 17),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetEnvironment', '{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}', UnicodeToString=0)
		return ret

	def LogEvent(self, Type=defaultNamedNotOptArg, Message=defaultNamedNotOptArg, Target=''):
		return self._ApplyTypes_(3000, 1, (11, 32), ((16396, 1), (8, 1), (8, 49)), 'LogEvent', None,Type
			, Message, Target)

	def Popup(self, Text=defaultNamedNotOptArg, SecondsToWait=defaultNamedOptArg, Title=defaultNamedOptArg, Type=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1001, LCID, 1, (3, 0), ((8, 1), (16396, 17), (16396, 17), (16396, 17)),Text
			, SecondsToWait, Title, Type)

	def RegDelete(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2002, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def RegRead(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(2000, 1, (12, 0), ((8, 1),), 'RegRead', None,Name
			)

	def RegWrite(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, Type=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2001, LCID, 1, (24, 0), ((8, 1), (16396, 1), (16396, 17)),Name
			, Value, Type)

	def Run(self, Command=defaultNamedNotOptArg, WindowStyle=defaultNamedOptArg, WaitOnReturn=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1000, LCID, 1, (3, 0), ((8, 1), (16396, 17), (16396, 17)),Command
			, WindowStyle, WaitOnReturn)

	def SendKeys(self, Keys=defaultNamedNotOptArg, Wait=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3011, LCID, 1, (24, 0), ((8, 1), (16396, 17)),Keys
			, Wait)

	_prop_map_get_ = {
		"CurrentDirectory": (3013, 2, (8, 0), (), "CurrentDirectory", None),
		# Method 'Environment' returns object of type 'IWshEnvironment'
		"Environment": (200, 2, (9, 0), ((16396, 17),), "Environment", '{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}'),
		# Method 'SpecialFolders' returns object of type 'IWshCollection'
		"SpecialFolders": (100, 2, (9, 0), (), "SpecialFolders", '{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}'),
	}
	_prop_map_put_ = {
		"CurrentDirectory": ((3013, LCID, 4, 0),()),
	}

class IWshShortcut(DispatchBaseClass):
	"""Shortcut Object"""
	CLSID = IID('{F935DC23-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_clsid = IID('{F935DC24-1CF0-11D0-ADB9-00C04FD58A0B}')

	def Load(self, PathLink=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2000, LCID, 1, (24, 0), ((8, 1),),PathLink
			)

	def Save(self):
		return self._oleobj_.InvokeTypes(2001, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Arguments": (1000, 2, (8, 0), (), "Arguments", None),
		"Description": (1001, 2, (8, 0), (), "Description", None),
		"FullName": (0, 2, (8, 0), (), "FullName", None),
		"Hotkey": (1002, 2, (8, 0), (), "Hotkey", None),
		"IconLocation": (1003, 2, (8, 0), (), "IconLocation", None),
		"TargetPath": (1005, 2, (8, 0), (), "TargetPath", None),
		"WindowStyle": (1006, 2, (3, 0), (), "WindowStyle", None),
		"WorkingDirectory": (1007, 2, (8, 0), (), "WorkingDirectory", None),
	}
	_prop_map_put_ = {
		"Arguments": ((1000, LCID, 4, 0),()),
		"Description": ((1001, LCID, 4, 0),()),
		"Hotkey": ((1002, LCID, 4, 0),()),
		"IconLocation": ((1003, LCID, 4, 0),()),
		"RelativePath": ((1004, LCID, 4, 0),()),
		"TargetPath": ((1005, LCID, 4, 0),()),
		"WindowStyle": ((1006, LCID, 4, 0),()),
		"WorkingDirectory": ((1007, LCID, 4, 0),()),
	}
	# Default property for this class is 'FullName'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "FullName", None))
	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))

class IWshURLShortcut(DispatchBaseClass):
	"""URLShortcut Object"""
	CLSID = IID('{F935DC2B-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_clsid = IID('{F935DC2C-1CF0-11D0-ADB9-00C04FD58A0B}')

	def Load(self, PathLink=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2000, LCID, 1, (24, 0), ((8, 1),),PathLink
			)

	def Save(self):
		return self._oleobj_.InvokeTypes(2001, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"FullName": (0, 2, (8, 0), (), "FullName", None),
		"TargetPath": (1005, 2, (8, 0), (), "TargetPath", None),
	}
	_prop_map_put_ = {
		"TargetPath": ((1005, LCID, 4, 0),()),
	}
	# Default property for this class is 'FullName'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "FullName", None))
	# str(ob) and int(ob) will use __call__
	def __unicode__(self, *args):
		try:
			return unicode(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))

from win32com.client import CoClassBaseClass
class Drive(CoClassBaseClass): # A CoClass
	CLSID = IID('{C7C3F5B1-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDrive,
	]
	default_interface = IDrive

class Drives(CoClassBaseClass): # A CoClass
	CLSID = IID('{C7C3F5B2-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDriveCollection,
	]
	default_interface = IDriveCollection

class File(CoClassBaseClass): # A CoClass
	CLSID = IID('{C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFile,
	]
	default_interface = IFile

# This CoClass is known by the name 'Scripting.FileSystemObject'
class FileSystemObject(CoClassBaseClass): # A CoClass
	CLSID = IID('{0D43FE01-F093-11CF-8940-00A0C9054228}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFileSystem3,
	]
	default_interface = IFileSystem3

class Files(CoClassBaseClass): # A CoClass
	CLSID = IID('{C7C3F5B6-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFileCollection,
	]
	default_interface = IFileCollection

class Folder(CoClassBaseClass): # A CoClass
	CLSID = IID('{C7C3F5B3-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFolder,
	]
	default_interface = IFolder

class Folders(CoClassBaseClass): # A CoClass
	CLSID = IID('{C7C3F5B4-88A3-11D0-ABCB-00A0C90FFFC0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFolderCollection,
	]
	default_interface = IFolderCollection

class IWshCollection_Class(CoClassBaseClass): # A CoClass
	# Generic Collection Object
	CLSID = IID('{F935DC28-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshCollection,
	]
	default_interface = IWshCollection

class IWshEnvironment_Class(CoClassBaseClass): # A CoClass
	# Environment Variables Collection Object
	CLSID = IID('{F935DC2A-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshEnvironment,
	]
	default_interface = IWshEnvironment

# This CoClass is known by the name 'WScript.Network.1'
class IWshNetwork_Class(CoClassBaseClass): # A CoClass
	# Network Object
	CLSID = IID('{F935DC26-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshNetwork2,
	]
	default_interface = IWshNetwork2

# This CoClass is known by the name 'WScript.Shell.1'
class IWshShell_Class(CoClassBaseClass): # A CoClass
	# Shell Object
	CLSID = IID('{F935DC22-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshShell3,
	]
	default_interface = IWshShell3

class IWshShortcut_Class(CoClassBaseClass): # A CoClass
	# Shortcut Object
	CLSID = IID('{F935DC24-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshShortcut,
	]
	default_interface = IWshShortcut

class IWshURLShortcut_Class(CoClassBaseClass): # A CoClass
	# URLShortcut Object
	CLSID = IID('{F935DC2C-1CF0-11D0-ADB9-00C04FD58A0B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshURLShortcut,
	]
	default_interface = IWshURLShortcut

class TextStream(CoClassBaseClass): # A CoClass
	CLSID = IID('{0BB02EC0-EF49-11CF-8940-00A0C9054228}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITextStream,
	]
	default_interface = ITextStream

class WshCollection(CoClassBaseClass): # A CoClass
	# Generic Collection Object
	CLSID = IID('{387DAFF4-DA03-44D2-B0D1-80C927C905AC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshCollection,
	]
	default_interface = IWshCollection

class WshEnvironment(CoClassBaseClass): # A CoClass
	# Environment Variables Collection Object
	CLSID = IID('{F48229AF-E28C-42B5-BB92-E114E62BDD54}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshEnvironment,
	]
	default_interface = IWshEnvironment

class WshExec(CoClassBaseClass): # A CoClass
	# WSHExec object
	CLSID = IID('{08FED191-BE19-11D3-A28B-00104BD35090}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshExec,
	]
	default_interface = IWshExec

# This CoClass is known by the name 'WScript.Network.1'
class WshNetwork(CoClassBaseClass): # A CoClass
	# Network Object
	CLSID = IID('{093FF999-1EA0-4079-9525-9614C3504B74}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshNetwork2,
	]
	default_interface = IWshNetwork2

# This CoClass is known by the name 'WScript.Shell.1'
class WshShell(CoClassBaseClass): # A CoClass
	# Shell Object
	CLSID = IID('{72C24DD5-D70A-438B-8A42-98424B88AFB8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshShell3,
	]
	default_interface = IWshShell3

class WshShortcut(CoClassBaseClass): # A CoClass
	# Shortcut Object
	CLSID = IID('{A548B8E4-51D5-4661-8824-DAA1D893DFB2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshShortcut,
	]
	default_interface = IWshShortcut

class WshURLShortcut(CoClassBaseClass): # A CoClass
	# URLShortcut Object
	CLSID = IID('{50E13488-6F1E-4450-96B0-873755403955}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWshURLShortcut,
	]
	default_interface = IWshURLShortcut

IDrive_vtables_dispatch_ = 1
IDrive_vtables_ = [
	(( 'Path' , 'pbstrPath' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'DriveLetter' , 'pbstrLetter' , ), 10000, (10000, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'ShareName' , 'pbstrShareName' , ), 10001, (10001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( 'DriveType' , 'pdt' , ), 10002, (10002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( 'RootFolder' , 'ppfolder' , ), 10003, (10003, (), [ (16393, 10, None, "IID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( 'AvailableSpace' , 'pvarAvail' , ), 10005, (10005, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
	(( 'FreeSpace' , 'pvarFree' , ), 10004, (10004, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 52 , (3, 0, None, None) , 0 , )),
	(( 'TotalSize' , 'pvarTotal' , ), 10006, (10006, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'VolumeName' , 'pbstrName' , ), 10007, (10007, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 60 , (3, 0, None, None) , 0 , )),
	(( 'VolumeName' , 'pbstrName' , ), 10007, (10007, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FileSystem' , 'pbstrFileSystem' , ), 10008, (10008, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 68 , (3, 0, None, None) , 0 , )),
	(( 'SerialNumber' , 'pulSerialNumber' , ), 10009, (10009, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsReady' , 'pfReady' , ), 10010, (10010, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 76 , (3, 0, None, None) , 0 , )),
]

IDriveCollection_vtables_dispatch_ = 1
IDriveCollection_vtables_ = [
	(( 'Item' , 'Key' , 'ppdrive' , ), 0, (0, (), [ (12, 1, None, None) , 
			(16393, 10, None, "IID('{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppenum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'plCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
]

IFile_vtables_dispatch_ = 1
IFile_vtables_ = [
	(( 'Path' , 'pbstrPath' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pbstrName' , ), 1000, (1000, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pbstrName' , ), 1000, (1000, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( 'ShortPath' , 'pbstrPath' , ), 1002, (1002, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( 'ShortName' , 'pbstrName' , ), 1001, (1001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( 'Drive' , 'ppdrive' , ), 1004, (1004, (), [ (16393, 10, None, "IID('{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
	(( 'ParentFolder' , 'ppfolder' , ), 1005, (1005, (), [ (16393, 10, None, "IID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 52 , (3, 0, None, None) , 0 , )),
	(( 'Attributes' , 'pfa' , ), 1003, (1003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Attributes' , 'pfa' , ), 1003, (1003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 60 , (3, 0, None, None) , 0 , )),
	(( 'DateCreated' , 'pdate' , ), 1006, (1006, (), [ (16391, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DateLastModified' , 'pdate' , ), 1007, (1007, (), [ (16391, 10, None, None) , ], 1 , 2 , 4 , 0 , 68 , (3, 0, None, None) , 0 , )),
	(( 'DateLastAccessed' , 'pdate' , ), 1008, (1008, (), [ (16391, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Size' , 'pvarSize' , ), 1009, (1009, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 76 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pbstrType' , ), 1010, (1010, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Force' , ), 1200, (1200, (), [ (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 84 , (3, 0, None, None) , 0 , )),
	(( 'Copy' , 'Destination' , 'OverWriteFiles' , ), 1202, (1202, (), [ (8, 1, None, None) , 
			(11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'Destination' , ), 1204, (1204, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 92 , (3, 0, None, None) , 0 , )),
	(( 'OpenAsTextStream' , 'IOMode' , 'Format' , 'ppts' , ), 1100, (1100, (), [ 
			(3, 49, '1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IFileCollection_vtables_dispatch_ = 1
IFileCollection_vtables_ = [
	(( 'Item' , 'Key' , 'ppfile' , ), 0, (0, (), [ (12, 1, None, None) , 
			(16393, 10, None, "IID('{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppenum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'plCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
]

IFileSystem_vtables_dispatch_ = 1
IFileSystem_vtables_ = [
	(( 'Drives' , 'ppdrives' , ), 10010, (10010, (), [ (16393, 10, None, "IID('{C7C3F5A1-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'BuildPath' , 'Path' , 'Name' , 'pbstrResult' , ), 10000, (10000, (), [ 
			(8, 1, None, None) , (8, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'GetDriveName' , 'Path' , 'pbstrResult' , ), 10004, (10004, (), [ (8, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( 'GetParentFolderName' , 'Path' , 'pbstrResult' , ), 10005, (10005, (), [ (8, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( 'GetFileName' , 'Path' , 'pbstrResult' , ), 10006, (10006, (), [ (8, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( 'GetBaseName' , 'Path' , 'pbstrResult' , ), 10007, (10007, (), [ (8, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
	(( 'GetExtensionName' , 'Path' , 'pbstrResult' , ), 10008, (10008, (), [ (8, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 52 , (3, 0, None, None) , 0 , )),
	(( 'GetAbsolutePathName' , 'Path' , 'pbstrResult' , ), 10002, (10002, (), [ (8, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GetTempName' , 'pbstrResult' , ), 10003, (10003, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 60 , (3, 0, None, None) , 0 , )),
	(( 'DriveExists' , 'DriveSpec' , 'pfExists' , ), 10015, (10015, (), [ (8, 1, None, None) , 
			(16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FileExists' , 'FileSpec' , 'pfExists' , ), 10016, (10016, (), [ (8, 1, None, None) , 
			(16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 68 , (3, 0, None, None) , 0 , )),
	(( 'FolderExists' , 'FolderSpec' , 'pfExists' , ), 10017, (10017, (), [ (8, 1, None, None) , 
			(16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'GetDrive' , 'DriveSpec' , 'ppdrive' , ), 10011, (10011, (), [ (8, 1, None, None) , 
			(16393, 10, None, "IID('{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 1 , 4 , 0 , 76 , (3, 0, None, None) , 0 , )),
	(( 'GetFile' , 'FilePath' , 'ppfile' , ), 10012, (10012, (), [ (8, 1, None, None) , 
			(16393, 10, None, "IID('{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'GetFolder' , 'FolderPath' , 'ppfolder' , ), 10013, (10013, (), [ (8, 1, None, None) , 
			(16393, 10, None, "IID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 1 , 4 , 0 , 84 , (3, 0, None, None) , 0 , )),
	(( 'GetSpecialFolder' , 'SpecialFolder' , 'ppfolder' , ), 10014, (10014, (), [ (3, 1, None, None) , 
			(16393, 10, None, "IID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DeleteFile' , 'FileSpec' , 'Force' , ), 1200, (1200, (), [ (8, 1, None, None) , 
			(11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 92 , (3, 0, None, None) , 0 , )),
	(( 'DeleteFolder' , 'FolderSpec' , 'Force' , ), 1201, (1201, (), [ (8, 1, None, None) , 
			(11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MoveFile' , 'Source' , 'Destination' , ), 1204, (1204, (), [ (8, 1, None, None) , 
			(8, 1, None, None) , ], 1 , 1 , 4 , 0 , 100 , (3, 0, None, None) , 0 , )),
	(( 'MoveFolder' , 'Source' , 'Destination' , ), 1205, (1205, (), [ (8, 1, None, None) , 
			(8, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CopyFile' , 'Source' , 'Destination' , 'OverWriteFiles' , ), 1202, (1202, (), [ 
			(8, 1, None, None) , (8, 1, None, None) , (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 108 , (3, 0, None, None) , 0 , )),
	(( 'CopyFolder' , 'Source' , 'Destination' , 'OverWriteFiles' , ), 1203, (1203, (), [ 
			(8, 1, None, None) , (8, 1, None, None) , (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CreateFolder' , 'Path' , 'ppfolder' , ), 1120, (1120, (), [ (8, 1, None, None) , 
			(16393, 10, None, "IID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 1 , 4 , 0 , 116 , (3, 0, None, None) , 0 , )),
	(( 'CreateTextFile' , 'FileName' , 'Overwrite' , 'Unicode' , 'ppts' , 
			), 1101, (1101, (), [ (8, 1, None, None) , (11, 49, 'True', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'OpenTextFile' , 'FileName' , 'IOMode' , 'Create' , 'Format' , 
			'ppts' , ), 1100, (1100, (), [ (8, 1, None, None) , (3, 49, '1', None) , (11, 49, 'False', None) , 
			(3, 49, '0', None) , (16393, 10, None, "IID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')") , ], 1 , 1 , 4 , 0 , 124 , (3, 0, None, None) , 0 , )),
]

IFileSystem3_vtables_dispatch_ = 1
IFileSystem3_vtables_ = [
	(( 'GetStandardStream' , 'StandardStreamType' , 'Unicode' , 'ppts' , ), 20000, (20000, (), [ 
			(3, 1, None, None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GetFileVersion' , 'FileName' , 'FileVersion' , ), 20010, (20010, (), [ (8, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 132 , (3, 0, None, None) , 0 , )),
]

IFolder_vtables_dispatch_ = 1
IFolder_vtables_ = [
	(( 'Path' , 'pbstrPath' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pbstrName' , ), 1000, (1000, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pbstrName' , ), 1000, (1000, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( 'ShortPath' , 'pbstrPath' , ), 1002, (1002, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( 'ShortName' , 'pbstrName' , ), 1001, (1001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( 'Drive' , 'ppdrive' , ), 1004, (1004, (), [ (16393, 10, None, "IID('{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
	(( 'ParentFolder' , 'ppfolder' , ), 1005, (1005, (), [ (16393, 10, None, "IID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 52 , (3, 0, None, None) , 0 , )),
	(( 'Attributes' , 'pfa' , ), 1003, (1003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Attributes' , 'pfa' , ), 1003, (1003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 60 , (3, 0, None, None) , 0 , )),
	(( 'DateCreated' , 'pdate' , ), 1006, (1006, (), [ (16391, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DateLastModified' , 'pdate' , ), 1007, (1007, (), [ (16391, 10, None, None) , ], 1 , 2 , 4 , 0 , 68 , (3, 0, None, None) , 0 , )),
	(( 'DateLastAccessed' , 'pdate' , ), 1008, (1008, (), [ (16391, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pbstrType' , ), 1010, (1010, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 76 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Force' , ), 1201, (1201, (), [ (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Copy' , 'Destination' , 'OverWriteFiles' , ), 1203, (1203, (), [ (8, 1, None, None) , 
			(11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 84 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'Destination' , ), 1205, (1205, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsRootFolder' , 'pfRootFolder' , ), 10000, (10000, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 92 , (3, 0, None, None) , 0 , )),
	(( 'Size' , 'pvarSize' , ), 1009, (1009, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SubFolders' , 'ppfolders' , ), 10001, (10001, (), [ (16393, 10, None, "IID('{C7C3F5A3-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 100 , (3, 0, None, None) , 0 , )),
	(( 'Files' , 'ppfiles' , ), 10002, (10002, (), [ (16393, 10, None, "IID('{C7C3F5A5-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CreateTextFile' , 'FileName' , 'Overwrite' , 'Unicode' , 'ppts' , 
			), 1101, (1101, (), [ (8, 1, None, None) , (11, 49, 'True', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')") , ], 1 , 1 , 4 , 0 , 108 , (3, 0, None, None) , 0 , )),
]

IFolderCollection_vtables_dispatch_ = 1
IFolderCollection_vtables_ = [
	(( 'Add' , 'Name' , 'ppfolder' , ), 2, (2, (), [ (8, 1, None, None) , 
			(16393, 10, None, "IID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 1 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Key' , 'ppfolder' , ), 0, (0, (), [ (12, 1, None, None) , 
			(16393, 10, None, "IID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')") , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppenum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 36 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'plCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
]

ITextStream_vtables_dispatch_ = 1
ITextStream_vtables_ = [
	(( 'Line' , 'Line' , ), 10000, (10000, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'Column' , 'Column' , ), -529, (-529, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'AtEndOfStream' , 'EOS' , ), 10002, (10002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( 'AtEndOfLine' , 'EOL' , ), 10003, (10003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( 'Read' , 'Characters' , 'Text' , ), 10004, (10004, (), [ (3, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( 'ReadLine' , 'Text' , ), 10005, (10005, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
	(( 'ReadAll' , 'Text' , ), 10006, (10006, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 52 , (3, 0, None, None) , 0 , )),
	(( 'Write' , 'Text' , ), 10007, (10007, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'WriteLine' , 'Text' , ), 10008, (10008, (), [ (8, 49, "''", None) , ], 1 , 1 , 4 , 0 , 60 , (3, 32, None, None) , 0 , )),
	(( 'WriteBlankLines' , 'Lines' , ), 10009, (10009, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Skip' , 'Characters' , ), 10010, (10010, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 68 , (3, 0, None, None) , 0 , )),
	(( 'SkipLine' , ), 10011, (10011, (), [ ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Close' , ), 10012, (10012, (), [ ], 1 , 1 , 4 , 0 , 76 , (3, 0, None, None) , 0 , )),
]

IWshCollection_vtables_dispatch_ = 1
IWshCollection_vtables_ = [
	(( 'Item' , 'Index' , 'out_Value' , ), 0, (0, (), [ (16396, 1, None, None) , 
			(16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'out_Count' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'length' , 'out_Count' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'out_Enum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 1 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
]

IWshEnvironment_vtables_dispatch_ = 1
IWshEnvironment_vtables_ = [
	(( 'Item' , 'Name' , 'out_Value' , ), 0, (0, (), [ (8, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Name' , 'out_Value' , ), 0, (0, (), [ (8, 1, None, None) , 
			(8, 1, None, None) , ], 1 , 4 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'out_Count' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( 'length' , 'out_Count' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'out_Enum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 1 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'Name' , ), 1001, (1001, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
]

IWshExec_vtables_dispatch_ = 1
IWshExec_vtables_ = [
	(( 'Status' , 'Status' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'StdIn' , 'ppts' , ), 3, (3, (), [ (16393, 10, None, "IID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')") , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'StdOut' , 'ppts' , ), 4, (4, (), [ (16393, 10, None, "IID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')") , ], 1 , 2 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( 'StdErr' , 'ppts' , ), 5, (5, (), [ (16393, 10, None, "IID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')") , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( 'ProcessID' , 'PID' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( 'ExitCode' , 'ExitCode' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
	(( 'Terminate' , ), 8, (8, (), [ ], 1 , 1 , 4 , 0 , 52 , (3, 0, None, None) , 0 , )),
]

IWshNetwork_vtables_dispatch_ = 1
IWshNetwork_vtables_ = [
	(( 'UserDomain' , 'out_UserDomain' , ), 1610743808, (1610743808, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'UserName' , 'out_UserName' , ), 1610743809, (1610743809, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'UserProfile' , 'out_UserProfile' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 36 , (3, 0, None, None) , 64 , )),
	(( 'ComputerName' , 'out_ComputerName' , ), 1610743811, (1610743811, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( 'Organization' , 'out_Organization' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 44 , (3, 0, None, None) , 64 , )),
	(( 'Site' , 'out_Site' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 48 , (3, 0, None, None) , 64 , )),
	(( 'MapNetworkDrive' , 'LocalName' , 'RemoteName' , 'UpdateProfile' , 'UserName' , 
			'Password' , ), 1000, (1000, (), [ (8, 1, None, None) , (8, 1, None, None) , (16396, 17, None, None) , 
			(16396, 17, None, None) , (16396, 17, None, None) , ], 1 , 1 , 4 , 3 , 52 , (3, 0, None, None) , 0 , )),
	(( 'RemoveNetworkDrive' , 'Name' , 'Force' , 'UpdateProfile' , ), 1001, (1001, (), [ 
			(8, 1, None, None) , (16396, 17, None, None) , (16396, 17, None, None) , ], 1 , 1 , 4 , 2 , 56 , (3, 0, None, None) , 0 , )),
	(( 'EnumNetworkDrives' , 'out_Enum' , ), 1002, (1002, (), [ (16393, 10, None, "IID('{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}')") , ], 1 , 1 , 4 , 0 , 60 , (3, 0, None, None) , 0 , )),
	(( 'AddPrinterConnection' , 'LocalName' , 'RemoteName' , 'UpdateProfile' , 'UserName' , 
			'Password' , ), 2000, (2000, (), [ (8, 1, None, None) , (8, 1, None, None) , (16396, 17, None, None) , 
			(16396, 17, None, None) , (16396, 17, None, None) , ], 1 , 1 , 4 , 3 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RemovePrinterConnection' , 'Name' , 'Force' , 'UpdateProfile' , ), 2001, (2001, (), [ 
			(8, 1, None, None) , (16396, 17, None, None) , (16396, 17, None, None) , ], 1 , 1 , 4 , 2 , 68 , (3, 0, None, None) , 0 , )),
	(( 'EnumPrinterConnections' , 'out_Enum' , ), 2002, (2002, (), [ (16393, 10, None, "IID('{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SetDefaultPrinter' , 'Name' , ), 2003, (2003, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 76 , (3, 0, None, None) , 0 , )),
]

IWshNetwork2_vtables_dispatch_ = 1
IWshNetwork2_vtables_ = [
	(( 'AddWindowsPrinterConnection' , 'PrinterName' , 'DriverName' , 'Port' , ), 2004, (2004, (), [ 
			(8, 1, None, None) , (8, 49, "''", None) , (8, 49, "'LPT1'", None) , ], 1 , 1 , 4 , 0 , 80 , (3, 32, None, None) , 0 , )),
]

IWshShell_vtables_dispatch_ = 1
IWshShell_vtables_ = [
	(( 'SpecialFolders' , 'out_Folders' , ), 100, (100, (), [ (16393, 10, None, "IID('{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}')") , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'Environment' , 'Type' , 'out_Env' , ), 200, (200, (), [ (16396, 17, None, None) , 
			(16393, 10, None, "IID('{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}')") , ], 1 , 2 , 4 , 1 , 32 , (3, 0, None, None) , 0 , )),
	(( 'Environment' , 'Type' , 'out_Env' , ), 200, (200, (), [ (16396, 17, None, None) , 
			(16393, 10, None, "IID('{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}')") , ], 1 , 2 , 4 , 1 , 32 , (3, 0, None, None) , 0 , )),
	(( 'Run' , 'Command' , 'WindowStyle' , 'WaitOnReturn' , 'out_ExitCode' , 
			), 1000, (1000, (), [ (8, 1, None, None) , (16396, 17, None, None) , (16396, 17, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 2 , 36 , (3, 0, None, None) , 0 , )),
	(( 'Popup' , 'Text' , 'SecondsToWait' , 'Title' , 'Type' , 
			'out_Button' , ), 1001, (1001, (), [ (8, 1, None, None) , (16396, 17, None, None) , (16396, 17, None, None) , 
			(16396, 17, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 3 , 40 , (3, 0, None, None) , 0 , )),
	(( 'CreateShortcut' , 'PathLink' , 'out_Shortcut' , ), 1002, (1002, (), [ (8, 1, None, None) , 
			(16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( 'ExpandEnvironmentStrings' , 'Src' , 'out_Dst' , ), 1006, (1006, (), [ (8, 1, None, None) , 
			(16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
	(( 'RegRead' , 'Name' , 'out_Value' , ), 2000, (2000, (), [ (8, 1, None, None) , 
			(16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 52 , (3, 0, None, None) , 0 , )),
	(( 'RegWrite' , 'Name' , 'Value' , 'Type' , ), 2001, (2001, (), [ 
			(8, 1, None, None) , (16396, 1, None, None) , (16396, 17, None, None) , ], 1 , 1 , 4 , 1 , 56 , (3, 0, None, None) , 0 , )),
	(( 'RegDelete' , 'Name' , ), 2002, (2002, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 60 , (3, 0, None, None) , 0 , )),
]

IWshShell2_vtables_dispatch_ = 1
IWshShell2_vtables_ = [
	(( 'LogEvent' , 'Type' , 'Message' , 'Target' , 'out_Success' , 
			), 3000, (3000, (), [ (16396, 1, None, None) , (8, 1, None, None) , (8, 49, "''", None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 32, None, None) , 0 , )),
	(( 'AppActivate' , 'App' , 'Wait' , 'out_Success' , ), 3010, (3010, (), [ 
			(16396, 1, None, None) , (16396, 17, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 1 , 68 , (3, 0, None, None) , 0 , )),
	(( 'SendKeys' , 'Keys' , 'Wait' , ), 3011, (3011, (), [ (8, 1, None, None) , 
			(16396, 17, None, None) , ], 1 , 1 , 4 , 1 , 72 , (3, 0, None, None) , 0 , )),
]

IWshShell3_vtables_dispatch_ = 1
IWshShell3_vtables_ = [
	(( 'Exec' , 'Command' , 'ppExec' , ), 3012, (3012, (), [ (8, 1, None, None) , 
			(16393, 10, None, "IID('{08FED190-BE19-11D3-A28B-00104BD35090}')") , ], 1 , 1 , 4 , 0 , 76 , (3, 0, None, None) , 0 , )),
	(( 'CurrentDirectory' , 'out_Directory' , ), 3013, (3013, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CurrentDirectory' , 'out_Directory' , ), 3013, (3013, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 84 , (3, 0, None, None) , 0 , )),
]

IWshShortcut_vtables_dispatch_ = 1
IWshShortcut_vtables_ = [
	(( 'FullName' , 'out_FullName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'Arguments' , 'out_Arguments' , ), 1000, (1000, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'Arguments' , 'out_Arguments' , ), 1000, (1000, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'out_Description' , ), 1001, (1001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'out_Description' , ), 1001, (1001, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( 'Hotkey' , 'out_HotKey' , ), 1002, (1002, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
	(( 'Hotkey' , 'out_HotKey' , ), 1002, (1002, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 52 , (3, 0, None, None) , 0 , )),
	(( 'IconLocation' , 'out_IconPath' , ), 1003, (1003, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'IconLocation' , 'out_IconPath' , ), 1003, (1003, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 60 , (3, 0, None, None) , 0 , )),
	(( 'RelativePath' , ), 1004, (1004, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'TargetPath' , 'out_Path' , ), 1005, (1005, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 68 , (3, 0, None, None) , 0 , )),
	(( 'TargetPath' , 'out_Path' , ), 1005, (1005, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'WindowStyle' , 'out_ShowCmd' , ), 1006, (1006, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 76 , (3, 0, None, None) , 0 , )),
	(( 'WindowStyle' , 'out_ShowCmd' , ), 1006, (1006, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'WorkingDirectory' , 'out_WorkingDirectory' , ), 1007, (1007, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 84 , (3, 0, None, None) , 0 , )),
	(( 'WorkingDirectory' , 'out_WorkingDirectory' , ), 1007, (1007, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'PathLink' , ), 2000, (2000, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 92 , (3, 0, None, None) , 64 , )),
	(( 'Save' , ), 2001, (2001, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IWshURLShortcut_vtables_dispatch_ = 1
IWshURLShortcut_vtables_ = [
	(( 'FullName' , 'out_FullName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( 'TargetPath' , 'out_Path' , ), 1005, (1005, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'TargetPath' , 'out_Path' , ), 1005, (1005, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'PathLink' , ), 2000, (2000, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 40 , (3, 0, None, None) , 64 , )),
	(( 'Save' , ), 2001, (2001, (), [ ], 1 , 1 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
]

RecordMap = {
}

CLSIDToClassMap = {
	'{41904400-BE18-11D3-A28B-00104BD35090}' : IWshShell3,
	'{2A0B9D10-4B87-11D3-A97A-00104B365C9F}' : IFileSystem3,
	'{F935DC21-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshShell,
	'{F935DC22-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshShell_Class,
	'{F935DC23-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshShortcut,
	'{F935DC24-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshShortcut_Class,
	'{F935DC25-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshNetwork,
	'{F935DC26-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshNetwork_Class,
	'{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshCollection,
	'{F935DC28-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshCollection_Class,
	'{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshEnvironment,
	'{08FED190-BE19-11D3-A28B-00104BD35090}' : IWshExec,
	'{F935DC2B-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshURLShortcut,
	'{F935DC2C-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshURLShortcut_Class,
	'{A548B8E4-51D5-4661-8824-DAA1D893DFB2}' : WshShortcut,
	'{50E13488-6F1E-4450-96B0-873755403955}' : WshURLShortcut,
	'{53BAD8C1-E718-11CF-893D-00A0C9054228}' : ITextStream,
	'{08FED191-BE19-11D3-A28B-00104BD35090}' : WshExec,
	'{24BE5A30-EDFE-11D2-B933-00104B365C9F}' : IWshShell2,
	'{24BE5A31-EDFE-11D2-B933-00104B365C9F}' : IWshNetwork2,
	'{72C24DD5-D70A-438B-8A42-98424B88AFB8}' : WshShell,
	'{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}' : IDrive,
	'{C7C3F5A1-88A3-11D0-ABCB-00A0C90FFFC0}' : IDriveCollection,
	'{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}' : IFolder,
	'{C7C3F5A3-88A3-11D0-ABCB-00A0C90FFFC0}' : IFolderCollection,
	'{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}' : IFile,
	'{C7C3F5A5-88A3-11D0-ABCB-00A0C90FFFC0}' : IFileCollection,
	'{C7C3F5B1-88A3-11D0-ABCB-00A0C90FFFC0}' : Drive,
	'{C7C3F5B2-88A3-11D0-ABCB-00A0C90FFFC0}' : Drives,
	'{C7C3F5B3-88A3-11D0-ABCB-00A0C90FFFC0}' : Folder,
	'{C7C3F5B4-88A3-11D0-ABCB-00A0C90FFFC0}' : Folders,
	'{C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0}' : File,
	'{C7C3F5B6-88A3-11D0-ABCB-00A0C90FFFC0}' : Files,
	'{387DAFF4-DA03-44D2-B0D1-80C927C905AC}' : WshCollection,
	'{F935DC2A-1CF0-11D0-ADB9-00C04FD58A0B}' : IWshEnvironment_Class,
	'{0BB02EC0-EF49-11CF-8940-00A0C9054228}' : TextStream,
	'{F48229AF-E28C-42B5-BB92-E114E62BDD54}' : WshEnvironment,
	'{0D43FE01-F093-11CF-8940-00A0C9054228}' : FileSystemObject,
	'{093FF999-1EA0-4079-9525-9614C3504B74}' : WshNetwork,
	'{0AB5A3D0-E5B6-11D0-ABF5-00A0C90FFFC0}' : IFileSystem,
}
CLSIDToPackageMap = {}
win32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )
VTablesToPackageMap = {}
VTablesToClassMap = {
	'{24BE5A31-EDFE-11D2-B933-00104B365C9F}' : 'IWshNetwork2',
	'{2A0B9D10-4B87-11D3-A97A-00104B365C9F}' : 'IFileSystem3',
	'{41904400-BE18-11D3-A28B-00104BD35090}' : 'IWshShell3',
	'{53BAD8C1-E718-11CF-893D-00A0C9054228}' : 'ITextStream',
	'{F935DC21-1CF0-11D0-ADB9-00C04FD58A0B}' : 'IWshShell',
	'{F935DC23-1CF0-11D0-ADB9-00C04FD58A0B}' : 'IWshShortcut',
	'{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}' : 'IDrive',
	'{F935DC25-1CF0-11D0-ADB9-00C04FD58A0B}' : 'IWshNetwork',
	'{24BE5A30-EDFE-11D2-B933-00104B365C9F}' : 'IWshShell2',
	'{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}' : 'IWshCollection',
	'{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}' : 'IWshEnvironment',
	'{08FED190-BE19-11D3-A28B-00104BD35090}' : 'IWshExec',
	'{F935DC2B-1CF0-11D0-ADB9-00C04FD58A0B}' : 'IWshURLShortcut',
	'{C7C3F5A1-88A3-11D0-ABCB-00A0C90FFFC0}' : 'IDriveCollection',
	'{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}' : 'IFolder',
	'{0AB5A3D0-E5B6-11D0-ABF5-00A0C90FFFC0}' : 'IFileSystem',
	'{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}' : 'IFile',
	'{C7C3F5A5-88A3-11D0-ABCB-00A0C90FFFC0}' : 'IFileCollection',
	'{C7C3F5A3-88A3-11D0-ABCB-00A0C90FFFC0}' : 'IFolderCollection',
}


NamesToIIDMap = {
	'IWshShell2' : '{24BE5A30-EDFE-11D2-B933-00104B365C9F}',
	'IFolder' : '{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}',
	'IFolderCollection' : '{C7C3F5A3-88A3-11D0-ABCB-00A0C90FFFC0}',
	'ITextStream' : '{53BAD8C1-E718-11CF-893D-00A0C9054228}',
	'IWshURLShortcut' : '{F935DC2B-1CF0-11D0-ADB9-00C04FD58A0B}',
	'IFileSystem' : '{0AB5A3D0-E5B6-11D0-ABF5-00A0C90FFFC0}',
	'IDriveCollection' : '{C7C3F5A1-88A3-11D0-ABCB-00A0C90FFFC0}',
	'IDrive' : '{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}',
	'IWshNetwork' : '{F935DC25-1CF0-11D0-ADB9-00C04FD58A0B}',
	'IFile' : '{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}',
	'IWshShell' : '{F935DC21-1CF0-11D0-ADB9-00C04FD58A0B}',
	'IWshNetwork2' : '{24BE5A31-EDFE-11D2-B933-00104B365C9F}',
	'IWshShell3' : '{41904400-BE18-11D3-A28B-00104BD35090}',
	'IFileSystem3' : '{2A0B9D10-4B87-11D3-A97A-00104B365C9F}',
	'IFileCollection' : '{C7C3F5A5-88A3-11D0-ABCB-00A0C90FFFC0}',
	'IWshExec' : '{08FED190-BE19-11D3-A28B-00104BD35090}',
	'IWshCollection' : '{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}',
	'IWshShortcut' : '{F935DC23-1CF0-11D0-ADB9-00C04FD58A0B}',
	'IWshEnvironment' : '{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}',
}

win32com.client.constants.__dicts__.append(constants.__dict__)

