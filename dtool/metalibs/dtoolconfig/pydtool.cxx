/*
 * This file generated by:
 * interrogate -D EXPCL_DTOOLCONFIG= -nodb -python -promiscuous -I~/panda3d-git/built/include -module panda3d.dtoolconfig -library dtoolconfig -string -true-names -do-module -oc pydtool.cxx ../../src/interrogatedb/interrogate_interface.h 
 *
 */

#include <sstream>

#include "../../src/interrogatedb/interrogate_interface.h"
#include "dtoolbase.h"

#undef _POSIX_C_SOURCE
#define PY_SSIZE_T_CLEAN 1

#if PYTHON_FRAMEWORK
  #include "Python/Python.h"
#else
  #include "Python.h"
#endif

static PyObject *_inPU7VHtbRf(PyObject *self, PyObject *args);
static PyObject *_inPU7VHda_g(PyObject *self, PyObject *args);
static PyObject *_inPU7VH4RgX(PyObject *self, PyObject *args);
static PyObject *_inPU7VH3Gip(PyObject *self, PyObject *args);
static PyObject *_inPU7VHRKDz(PyObject *self, PyObject *args);
static PyObject *_inPU7VHgZ9N(PyObject *self, PyObject *args);
static PyObject *_inPU7VHFnRZ(PyObject *self, PyObject *args);
static PyObject *_inPU7VHg0Qv(PyObject *self, PyObject *args);
static PyObject *_inPU7VHtrqw(PyObject *self, PyObject *args);
static PyObject *_inPU7VHdmpW(PyObject *self, PyObject *args);
static PyObject *_inPU7VHUYgQ(PyObject *self, PyObject *args);
static PyObject *_inPU7VH0k7F(PyObject *self, PyObject *args);
static PyObject *_inPU7VHfIsr(PyObject *self, PyObject *args);
static PyObject *_inPU7VHvysR(PyObject *self, PyObject *args);
static PyObject *_inPU7VHYQ_2(PyObject *self, PyObject *args);
static PyObject *_inPU7VH3kdv(PyObject *self, PyObject *args);
static PyObject *_inPU7VHew01(PyObject *self, PyObject *args);
static PyObject *_inPU7VHQna7(PyObject *self, PyObject *args);
static PyObject *_inPU7VHkg95(PyObject *self, PyObject *args);
static PyObject *_inPU7VHluRc(PyObject *self, PyObject *args);
static PyObject *_inPU7VHtHdM(PyObject *self, PyObject *args);
static PyObject *_inPU7VHDId0(PyObject *self, PyObject *args);
static PyObject *_inPU7VHHuAm(PyObject *self, PyObject *args);
static PyObject *_inPU7VH_xr0(PyObject *self, PyObject *args);
static PyObject *_inPU7VHH5qp(PyObject *self, PyObject *args);
static PyObject *_inPU7VHU2_B(PyObject *self, PyObject *args);
static PyObject *_inPU7VHHFO2(PyObject *self, PyObject *args);
static PyObject *_inPU7VHcfjm(PyObject *self, PyObject *args);
static PyObject *_inPU7VH3Sjw(PyObject *self, PyObject *args);
static PyObject *_inPU7VHgJcX(PyObject *self, PyObject *args);
static PyObject *_inPU7VHYlw6(PyObject *self, PyObject *args);
static PyObject *_inPU7VHsmnz(PyObject *self, PyObject *args);
static PyObject *_inPU7VHxQ10(PyObject *self, PyObject *args);
static PyObject *_inPU7VH6gPB(PyObject *self, PyObject *args);
static PyObject *_inPU7VHISgV(PyObject *self, PyObject *args);
static PyObject *_inPU7VHH3bx(PyObject *self, PyObject *args);
static PyObject *_inPU7VHzeUk(PyObject *self, PyObject *args);
static PyObject *_inPU7VHUeI5(PyObject *self, PyObject *args);
static PyObject *_inPU7VHuSvx(PyObject *self, PyObject *args);
static PyObject *_inPU7VHwpYd(PyObject *self, PyObject *args);
static PyObject *_inPU7VHOfNh(PyObject *self, PyObject *args);
static PyObject *_inPU7VHf5_U(PyObject *self, PyObject *args);
static PyObject *_inPU7VHL3ZB(PyObject *self, PyObject *args);
static PyObject *_inPU7VHXw0I(PyObject *self, PyObject *args);
static PyObject *_inPU7VH3zru(PyObject *self, PyObject *args);
static PyObject *_inPU7VHRrg2(PyObject *self, PyObject *args);
static PyObject *_inPU7VHEJCx(PyObject *self, PyObject *args);
static PyObject *_inPU7VHWAZr(PyObject *self, PyObject *args);
static PyObject *_inPU7VHrD_M(PyObject *self, PyObject *args);
static PyObject *_inPU7VHjolz(PyObject *self, PyObject *args);
static PyObject *_inPU7VHt_JD(PyObject *self, PyObject *args);
static PyObject *_inPU7VHwEts(PyObject *self, PyObject *args);
static PyObject *_inPU7VHrJWs(PyObject *self, PyObject *args);
static PyObject *_inPU7VHpmFD(PyObject *self, PyObject *args);
static PyObject *_inPU7VHyYUX(PyObject *self, PyObject *args);
static PyObject *_inPU7VH54dn(PyObject *self, PyObject *args);
static PyObject *_inPU7VHGMpW(PyObject *self, PyObject *args);
static PyObject *_inPU7VHNuBV(PyObject *self, PyObject *args);
static PyObject *_inPU7VH9UwA(PyObject *self, PyObject *args);
static PyObject *_inPU7VH3FDt(PyObject *self, PyObject *args);
static PyObject *_inPU7VHf513(PyObject *self, PyObject *args);
static PyObject *_inPU7VHsqGH(PyObject *self, PyObject *args);
static PyObject *_inPU7VH7shV(PyObject *self, PyObject *args);
static PyObject *_inPU7VHA1eF(PyObject *self, PyObject *args);
static PyObject *_inPU7VH9tTm(PyObject *self, PyObject *args);
static PyObject *_inPU7VH776V(PyObject *self, PyObject *args);
static PyObject *_inPU7VHfaH0(PyObject *self, PyObject *args);
static PyObject *_inPU7VHGB9D(PyObject *self, PyObject *args);
static PyObject *_inPU7VHsxxs(PyObject *self, PyObject *args);
static PyObject *_inPU7VHMT0z(PyObject *self, PyObject *args);
static PyObject *_inPU7VHiW3v(PyObject *self, PyObject *args);
static PyObject *_inPU7VH4Px8(PyObject *self, PyObject *args);
static PyObject *_inPU7VHNHcs(PyObject *self, PyObject *args);
static PyObject *_inPU7VHqHrb(PyObject *self, PyObject *args);
static PyObject *_inPU7VHaOqq(PyObject *self, PyObject *args);
static PyObject *_inPU7VHqWOw(PyObject *self, PyObject *args);
static PyObject *_inPU7VHHu7x(PyObject *self, PyObject *args);
static PyObject *_inPU7VHwGnA(PyObject *self, PyObject *args);
static PyObject *_inPU7VHXGxx(PyObject *self, PyObject *args);
static PyObject *_inPU7VHj04Z(PyObject *self, PyObject *args);
static PyObject *_inPU7VHEOv4(PyObject *self, PyObject *args);
static PyObject *_inPU7VHpCqJ(PyObject *self, PyObject *args);
static PyObject *_inPU7VH_Pz3(PyObject *self, PyObject *args);
static PyObject *_inPU7VHt_06(PyObject *self, PyObject *args);
static PyObject *_inPU7VHmuPs(PyObject *self, PyObject *args);
static PyObject *_inPU7VHvM8B(PyObject *self, PyObject *args);
static PyObject *_inPU7VHap97(PyObject *self, PyObject *args);
static PyObject *_inPU7VH0o8D(PyObject *self, PyObject *args);
static PyObject *_inPU7VHOoQ2(PyObject *self, PyObject *args);
static PyObject *_inPU7VHKuFh(PyObject *self, PyObject *args);
static PyObject *_inPU7VHo5L6(PyObject *self, PyObject *args);
static PyObject *_inPU7VHzgKK(PyObject *self, PyObject *args);
static PyObject *_inPU7VH0FIF(PyObject *self, PyObject *args);
static PyObject *_inPU7VHZqvD(PyObject *self, PyObject *args);
static PyObject *_inPU7VHDyRd(PyObject *self, PyObject *args);
static PyObject *_inPU7VHMnKa(PyObject *self, PyObject *args);
static PyObject *_inPU7VHRtji(PyObject *self, PyObject *args);
static PyObject *_inPU7VHCnbQ(PyObject *self, PyObject *args);
static PyObject *_inPU7VHdUVN(PyObject *self, PyObject *args);
static PyObject *_inPU7VHihbt(PyObject *self, PyObject *args);
static PyObject *_inPU7VHbyPY(PyObject *self, PyObject *args);
static PyObject *_inPU7VHAaT6(PyObject *self, PyObject *args);
static PyObject *_inPU7VHgL9q(PyObject *self, PyObject *args);
static PyObject *_inPU7VHWB97(PyObject *self, PyObject *args);
static PyObject *_inPU7VHDUAl(PyObject *self, PyObject *args);
static PyObject *_inPU7VH1_Kf(PyObject *self, PyObject *args);
static PyObject *_inPU7VH98lD(PyObject *self, PyObject *args);
static PyObject *_inPU7VH9SHr(PyObject *self, PyObject *args);
static PyObject *_inPU7VHdiZP(PyObject *self, PyObject *args);
static PyObject *_inPU7VHTdER(PyObject *self, PyObject *args);
static PyObject *_inPU7VHYO56(PyObject *self, PyObject *args);
static PyObject *_inPU7VHxtCG(PyObject *self, PyObject *args);
static PyObject *_inPU7VH_EB2(PyObject *self, PyObject *args);
static PyObject *_inPU7VHEG1l(PyObject *self, PyObject *args);
static PyObject *_inPU7VH7tUq(PyObject *self, PyObject *args);
static PyObject *_inPU7VHyStU(PyObject *self, PyObject *args);
static PyObject *_inPU7VHdM85(PyObject *self, PyObject *args);
static PyObject *_inPU7VHk_GN(PyObject *self, PyObject *args);
static PyObject *_inPU7VH8QjG(PyObject *self, PyObject *args);
static PyObject *_inPU7VHyMtj(PyObject *self, PyObject *args);
static PyObject *_inPU7VHHDtN(PyObject *self, PyObject *args);
static PyObject *_inPU7VHHFjA(PyObject *self, PyObject *args);
static PyObject *_inPU7VH_NPR(PyObject *self, PyObject *args);
static PyObject *_inPU7VHcTOH(PyObject *self, PyObject *args);
static PyObject *_inPU7VHhdU7(PyObject *self, PyObject *args);
static PyObject *_inPU7VHQPxU(PyObject *self, PyObject *args);
static PyObject *_inPU7VHO7Pz(PyObject *self, PyObject *args);
static PyObject *_inPU7VHvu_E(PyObject *self, PyObject *args);
static PyObject *_inPU7VHxGUt(PyObject *self, PyObject *args);
static PyObject *_inPU7VHzM1P(PyObject *self, PyObject *args);
static PyObject *_inPU7VHoY5L(PyObject *self, PyObject *args);


/*
 * Python simple wrapper for
 * void interrogate_add_search_directory(char const *dirname)
 */
static PyObject *
_inPU7VHtbRf(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    interrogate_add_search_directory((char *)param0);
    return Py_BuildValue("");
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * void interrogate_add_search_path(char const *pathstring)
 */
static PyObject *
_inPU7VHda_g(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    interrogate_add_search_path((char *)param0);
    return Py_BuildValue("");
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_error_flag(void)
 */
static PyObject *
_inPU7VH4RgX(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    bool return_value = interrogate_error_flag();
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_manifests(void)
 */
static PyObject *
_inPU7VH3Gip(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_manifests();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ManifestIndex interrogate_get_manifest(int n)
 */
static PyObject *
_inPU7VHRKDz(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    ManifestIndex return_value = interrogate_get_manifest((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ManifestIndex interrogate_get_manifest_by_name(char const *manifest_name)
 */
static PyObject *
_inPU7VHgZ9N(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    ManifestIndex return_value = interrogate_get_manifest_by_name((char *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_manifest_name(ManifestIndex manifest)
 */
static PyObject *
_inPU7VHFnRZ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_manifest_name((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_manifest_definition(ManifestIndex manifest)
 */
static PyObject *
_inPU7VHg0Qv(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_manifest_definition((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_manifest_has_type(ManifestIndex manifest)
 */
static PyObject *
_inPU7VHtrqw(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_manifest_has_type((ManifestIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_manifest_get_type(ManifestIndex manifest)
 */
static PyObject *
_inPU7VHdmpW(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_manifest_get_type((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_manifest_has_getter(ManifestIndex manifest)
 */
static PyObject *
_inPU7VHUYgQ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_manifest_has_getter((ManifestIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_manifest_getter(ManifestIndex manifest)
 */
static PyObject *
_inPU7VH0k7F(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_manifest_getter((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_manifest_has_int_value(ManifestIndex manifest)
 */
static PyObject *
_inPU7VHfIsr(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_manifest_has_int_value((ManifestIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_manifest_get_int_value(ManifestIndex manifest)
 */
static PyObject *
_inPU7VHvysR(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_manifest_get_int_value((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_element_name(ElementIndex element)
 */
static PyObject *
_inPU7VHYQ_2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_element_name((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_element_scoped_name(ElementIndex element)
 */
static PyObject *
_inPU7VH3kdv(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_element_scoped_name((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_element_has_comment(ElementIndex element)
 */
static PyObject *
_inPU7VHew01(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_element_has_comment((ElementIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_element_comment(ElementIndex element)
 */
static PyObject *
_inPU7VHQna7(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_element_comment((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ElementIndex interrogate_get_element_by_name(char const *element_name)
 */
static PyObject *
_inPU7VHkg95(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    ElementIndex return_value = interrogate_get_element_by_name((char *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ElementIndex interrogate_get_element_by_scoped_name(char const *element_name)
 */
static PyObject *
_inPU7VHluRc(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    ElementIndex return_value = interrogate_get_element_by_scoped_name((char *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_element_type(ElementIndex element)
 */
static PyObject *
_inPU7VHtHdM(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_element_type((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_element_has_getter(ElementIndex element)
 */
static PyObject *
_inPU7VHDId0(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_element_has_getter((ElementIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_element_getter(ElementIndex element)
 */
static PyObject *
_inPU7VHHuAm(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_element_getter((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_element_has_setter(ElementIndex element)
 */
static PyObject *
_inPU7VH_xr0(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_element_has_setter((ElementIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_element_setter(ElementIndex element)
 */
static PyObject *
_inPU7VHH5qp(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_element_setter((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_globals(void)
 */
static PyObject *
_inPU7VHU2_B(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_globals();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ElementIndex interrogate_get_global(int n)
 */
static PyObject *
_inPU7VHHFO2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    ElementIndex return_value = interrogate_get_global((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_global_functions(void)
 */
static PyObject *
_inPU7VHcfjm(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_global_functions();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_get_global_function(int n)
 */
static PyObject *
_inPU7VH3Sjw(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_get_global_function((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_functions(void)
 */
static PyObject *
_inPU7VHgJcX(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_functions();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_get_function(int n)
 */
static PyObject *
_inPU7VHYlw6(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_get_function((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_name(FunctionIndex function)
 */
static PyObject *
_inPU7VHsmnz(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_name((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_scoped_name(FunctionIndex function)
 */
static PyObject *
_inPU7VHxQ10(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_scoped_name((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_has_comment(FunctionIndex function)
 */
static PyObject *
_inPU7VH6gPB(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_has_comment((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_comment(FunctionIndex function)
 */
static PyObject *
_inPU7VHISgV(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_comment((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_prototype(FunctionIndex function)
 */
static PyObject *
_inPU7VHH3bx(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_prototype((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_is_method(FunctionIndex function)
 */
static PyObject *
_inPU7VHzeUk(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_is_method((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_function_class(FunctionIndex function)
 */
static PyObject *
_inPU7VHUeI5(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_function_class((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_has_module_name(FunctionIndex function)
 */
static PyObject *
_inPU7VHuSvx(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_has_module_name((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_module_name(FunctionIndex function)
 */
static PyObject *
_inPU7VHwpYd(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_module_name((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_has_library_name(FunctionIndex function)
 */
static PyObject *
_inPU7VHOfNh(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_has_library_name((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_library_name(FunctionIndex function)
 */
static PyObject *
_inPU7VHf5_U(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_library_name((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_is_virtual(FunctionIndex function)
 */
static PyObject *
_inPU7VHL3ZB(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_is_virtual((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_function_number_of_c_wrappers(FunctionIndex function)
 */
static PyObject *
_inPU7VHXw0I(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_function_number_of_c_wrappers((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionWrapperIndex interrogate_function_c_wrapper(FunctionIndex function, int n)
 */
static PyObject *
_inPU7VH3zru(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionWrapperIndex return_value = interrogate_function_c_wrapper((FunctionIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_function_number_of_python_wrappers(FunctionIndex function)
 */
static PyObject *
_inPU7VHRrg2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_function_number_of_python_wrappers((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionWrapperIndex interrogate_function_python_wrapper(FunctionIndex function, int n)
 */
static PyObject *
_inPU7VHEJCx(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionWrapperIndex return_value = interrogate_function_python_wrapper((FunctionIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_wrapper_name(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHWAZr(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_wrapper_name((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_is_callable_by_name(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHrD_M(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_is_callable_by_name((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_has_comment(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHjolz(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_has_comment((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_wrapper_comment(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHt_JD(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_wrapper_comment((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_has_return_value(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHwEts(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_has_return_value((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_wrapper_return_type(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHrJWs(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_wrapper_return_type((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_caller_manages_return_value(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHpmFD(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_caller_manages_return_value((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_wrapper_return_value_destructor(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHyYUX(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_wrapper_return_value_destructor((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_wrapper_number_of_parameters(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VH54dn(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_wrapper_number_of_parameters((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_wrapper_parameter_type(FunctionWrapperIndex wrapper, int n)
 */
static PyObject *
_inPU7VHGMpW(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    TypeIndex return_value = interrogate_wrapper_parameter_type((FunctionWrapperIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_parameter_has_name(FunctionWrapperIndex wrapper, int n)
 */
static PyObject *
_inPU7VHNuBV(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_wrapper_parameter_has_name((FunctionWrapperIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_wrapper_parameter_name(FunctionWrapperIndex wrapper, int n)
 */
static PyObject *
_inPU7VH9UwA(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_wrapper_parameter_name((FunctionWrapperIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_parameter_is_this(FunctionWrapperIndex wrapper, int n)
 */
static PyObject *
_inPU7VH3FDt(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_wrapper_parameter_is_this((FunctionWrapperIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_has_pointer(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHf513(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_has_pointer((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * void *interrogate_wrapper_pointer(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VHsqGH(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    interrogate_wrapper_pointer((FunctionWrapperIndex)param0);
    return Py_BuildValue("");
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_wrapper_unique_name(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inPU7VH7shV(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_wrapper_unique_name((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionWrapperIndex interrogate_get_wrapper_by_unique_name(char const *unique_name)
 */
static PyObject *
_inPU7VHA1eF(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    FunctionWrapperIndex return_value = interrogate_get_wrapper_by_unique_name((char *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_make_seq_class(MakeSeqIndex make_seq)
 */
static PyObject *
_inPU7VH9tTm(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_make_seq_class((MakeSeqIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_make_seq_seq_name(MakeSeqIndex make_seq)
 */
static PyObject *
_inPU7VH776V(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_make_seq_seq_name((MakeSeqIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_make_seq_num_name(MakeSeqIndex make_seq)
 */
static PyObject *
_inPU7VHfaH0(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_make_seq_num_name((MakeSeqIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_make_seq_element_name(MakeSeqIndex make_seq)
 */
static PyObject *
_inPU7VHGB9D(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_make_seq_element_name((MakeSeqIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_global_types(void)
 */
static PyObject *
_inPU7VHsxxs(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_global_types();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_global_type(int n)
 */
static PyObject *
_inPU7VHMT0z(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_get_global_type((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_types(void)
 */
static PyObject *
_inPU7VHiW3v(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_types();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_type(int n)
 */
static PyObject *
_inPU7VH4Px8(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_get_type((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_type_by_name(char const *type_name)
 */
static PyObject *
_inPU7VHNHcs(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    TypeIndex return_value = interrogate_get_type_by_name((char *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_type_by_scoped_name(char const *type_name)
 */
static PyObject *
_inPU7VHqHrb(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    TypeIndex return_value = interrogate_get_type_by_scoped_name((char *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_type_by_true_name(char const *type_name)
 */
static PyObject *
_inPU7VHaOqq(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    TypeIndex return_value = interrogate_get_type_by_true_name((char *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_name(TypeIndex type)
 */
static PyObject *
_inPU7VHqWOw(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_scoped_name(TypeIndex type)
 */
static PyObject *
_inPU7VHHu7x(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_scoped_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_true_name(TypeIndex type)
 */
static PyObject *
_inPU7VHwGnA(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_true_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_nested(TypeIndex type)
 */
static PyObject *
_inPU7VHXGxx(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_nested((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_type_outer_class(TypeIndex type)
 */
static PyObject *
_inPU7VHj04Z(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_type_outer_class((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_has_comment(TypeIndex type)
 */
static PyObject *
_inPU7VHEOv4(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_comment((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_comment(TypeIndex type)
 */
static PyObject *
_inPU7VHpCqJ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_comment((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_has_module_name(TypeIndex type)
 */
static PyObject *
_inPU7VH_Pz3(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_module_name((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_module_name(TypeIndex type)
 */
static PyObject *
_inPU7VHt_06(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_module_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_has_library_name(TypeIndex type)
 */
static PyObject *
_inPU7VHmuPs(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_library_name((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_library_name(TypeIndex type)
 */
static PyObject *
_inPU7VHvM8B(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_library_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_atomic(TypeIndex type)
 */
static PyObject *
_inPU7VHap97(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_atomic((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * AtomicToken interrogate_type_atomic_token(TypeIndex type)
 */
static PyObject *
_inPU7VH0o8D(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    AtomicToken return_value = interrogate_type_atomic_token((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_unsigned(TypeIndex type)
 */
static PyObject *
_inPU7VHOoQ2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_unsigned((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_signed(TypeIndex type)
 */
static PyObject *
_inPU7VHKuFh(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_signed((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_long(TypeIndex type)
 */
static PyObject *
_inPU7VHo5L6(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_long((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_longlong(TypeIndex type)
 */
static PyObject *
_inPU7VHzgKK(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_longlong((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_short(TypeIndex type)
 */
static PyObject *
_inPU7VH0FIF(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_short((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_wrapped(TypeIndex type)
 */
static PyObject *
_inPU7VHZqvD(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_wrapped((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_pointer(TypeIndex type)
 */
static PyObject *
_inPU7VHDyRd(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_pointer((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_const(TypeIndex type)
 */
static PyObject *
_inPU7VHMnKa(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_const((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_typedef(TypeIndex type)
 */
static PyObject *
_inPU7VHRtji(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_typedef((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_type_wrapped_type(TypeIndex type)
 */
static PyObject *
_inPU7VHCnbQ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_type_wrapped_type((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_enum(TypeIndex type)
 */
static PyObject *
_inPU7VHdUVN(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_enum((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_enum_values(TypeIndex type)
 */
static PyObject *
_inPU7VHihbt(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_enum_values((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_enum_value_name(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHbyPY(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_type_enum_value_name((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_enum_value_scoped_name(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHAaT6(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_type_enum_value_scoped_name((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_enum_value_comment(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHgL9q(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_type_enum_value_comment((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_enum_value(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHWB97(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_enum_value((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_struct(TypeIndex type)
 */
static PyObject *
_inPU7VHDUAl(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_struct((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_class(TypeIndex type)
 */
static PyObject *
_inPU7VH1_Kf(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_class((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_union(TypeIndex type)
 */
static PyObject *
_inPU7VH98lD(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_union((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_fully_defined(TypeIndex type)
 */
static PyObject *
_inPU7VH9SHr(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_fully_defined((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_unpublished(TypeIndex type)
 */
static PyObject *
_inPU7VHdiZP(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_unpublished((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_constructors(TypeIndex type)
 */
static PyObject *
_inPU7VHTdER(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_constructors((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_constructor(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHYO56(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_constructor((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_has_destructor(TypeIndex type)
 */
static PyObject *
_inPU7VHxtCG(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_destructor((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_destructor_is_inherited(TypeIndex type)
 */
static PyObject *
_inPU7VH_EB2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_destructor_is_inherited((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_destructor(TypeIndex type)
 */
static PyObject *
_inPU7VHEG1l(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_type_get_destructor((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_elements(TypeIndex type)
 */
static PyObject *
_inPU7VH7tUq(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_elements((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ElementIndex interrogate_type_get_element(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHyStU(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    ElementIndex return_value = interrogate_type_get_element((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_methods(TypeIndex type)
 */
static PyObject *
_inPU7VHdM85(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_methods((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_method(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHk_GN(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_method((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_make_seqs(TypeIndex type)
 */
static PyObject *
_inPU7VH8QjG(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_make_seqs((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * MakeSeqIndex interrogate_type_get_make_seq(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHyMtj(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    MakeSeqIndex return_value = interrogate_type_get_make_seq((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_casts(TypeIndex type)
 */
static PyObject *
_inPU7VHHDtN(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_casts((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_cast(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHHFjA(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_cast((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_derivations(TypeIndex type)
 */
static PyObject *
_inPU7VH_NPR(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_derivations((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_type_get_derivation(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHcTOH(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    TypeIndex return_value = interrogate_type_get_derivation((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_derivation_has_upcast(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHhdU7(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_type_derivation_has_upcast((TypeIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_upcast(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHQPxU(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_upcast((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_derivation_downcast_is_impossible(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHO7Pz(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_type_derivation_downcast_is_impossible((TypeIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_derivation_has_downcast(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHvu_E(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_type_derivation_has_downcast((TypeIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_downcast(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHxGUt(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_downcast((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_nested_types(TypeIndex type)
 */
static PyObject *
_inPU7VHzM1P(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_nested_types((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_type_get_nested_type(TypeIndex type, int n)
 */
static PyObject *
_inPU7VHoY5L(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    TypeIndex return_value = interrogate_type_get_nested_type((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}


static PyMethodDef python_simple_funcs[] = {
  { "interrogate_add_search_directory", &_inPU7VHtbRf, METH_VARARGS },
  { "interrogate_add_search_path", &_inPU7VHda_g, METH_VARARGS },
  { "interrogate_error_flag", &_inPU7VH4RgX, METH_VARARGS },
  { "interrogate_number_of_manifests", &_inPU7VH3Gip, METH_VARARGS },
  { "interrogate_get_manifest", &_inPU7VHRKDz, METH_VARARGS },
  { "interrogate_get_manifest_by_name", &_inPU7VHgZ9N, METH_VARARGS },
  { "interrogate_manifest_name", &_inPU7VHFnRZ, METH_VARARGS },
  { "interrogate_manifest_definition", &_inPU7VHg0Qv, METH_VARARGS },
  { "interrogate_manifest_has_type", &_inPU7VHtrqw, METH_VARARGS },
  { "interrogate_manifest_get_type", &_inPU7VHdmpW, METH_VARARGS },
  { "interrogate_manifest_has_getter", &_inPU7VHUYgQ, METH_VARARGS },
  { "interrogate_manifest_getter", &_inPU7VH0k7F, METH_VARARGS },
  { "interrogate_manifest_has_int_value", &_inPU7VHfIsr, METH_VARARGS },
  { "interrogate_manifest_get_int_value", &_inPU7VHvysR, METH_VARARGS },
  { "interrogate_element_name", &_inPU7VHYQ_2, METH_VARARGS },
  { "interrogate_element_scoped_name", &_inPU7VH3kdv, METH_VARARGS },
  { "interrogate_element_has_comment", &_inPU7VHew01, METH_VARARGS },
  { "interrogate_element_comment", &_inPU7VHQna7, METH_VARARGS },
  { "interrogate_get_element_by_name", &_inPU7VHkg95, METH_VARARGS },
  { "interrogate_get_element_by_scoped_name", &_inPU7VHluRc, METH_VARARGS },
  { "interrogate_element_type", &_inPU7VHtHdM, METH_VARARGS },
  { "interrogate_element_has_getter", &_inPU7VHDId0, METH_VARARGS },
  { "interrogate_element_getter", &_inPU7VHHuAm, METH_VARARGS },
  { "interrogate_element_has_setter", &_inPU7VH_xr0, METH_VARARGS },
  { "interrogate_element_setter", &_inPU7VHH5qp, METH_VARARGS },
  { "interrogate_number_of_globals", &_inPU7VHU2_B, METH_VARARGS },
  { "interrogate_get_global", &_inPU7VHHFO2, METH_VARARGS },
  { "interrogate_number_of_global_functions", &_inPU7VHcfjm, METH_VARARGS },
  { "interrogate_get_global_function", &_inPU7VH3Sjw, METH_VARARGS },
  { "interrogate_number_of_functions", &_inPU7VHgJcX, METH_VARARGS },
  { "interrogate_get_function", &_inPU7VHYlw6, METH_VARARGS },
  { "interrogate_function_name", &_inPU7VHsmnz, METH_VARARGS },
  { "interrogate_function_scoped_name", &_inPU7VHxQ10, METH_VARARGS },
  { "interrogate_function_has_comment", &_inPU7VH6gPB, METH_VARARGS },
  { "interrogate_function_comment", &_inPU7VHISgV, METH_VARARGS },
  { "interrogate_function_prototype", &_inPU7VHH3bx, METH_VARARGS },
  { "interrogate_function_is_method", &_inPU7VHzeUk, METH_VARARGS },
  { "interrogate_function_class", &_inPU7VHUeI5, METH_VARARGS },
  { "interrogate_function_has_module_name", &_inPU7VHuSvx, METH_VARARGS },
  { "interrogate_function_module_name", &_inPU7VHwpYd, METH_VARARGS },
  { "interrogate_function_has_library_name", &_inPU7VHOfNh, METH_VARARGS },
  { "interrogate_function_library_name", &_inPU7VHf5_U, METH_VARARGS },
  { "interrogate_function_is_virtual", &_inPU7VHL3ZB, METH_VARARGS },
  { "interrogate_function_number_of_c_wrappers", &_inPU7VHXw0I, METH_VARARGS },
  { "interrogate_function_c_wrapper", &_inPU7VH3zru, METH_VARARGS },
  { "interrogate_function_number_of_python_wrappers", &_inPU7VHRrg2, METH_VARARGS },
  { "interrogate_function_python_wrapper", &_inPU7VHEJCx, METH_VARARGS },
  { "interrogate_wrapper_name", &_inPU7VHWAZr, METH_VARARGS },
  { "interrogate_wrapper_is_callable_by_name", &_inPU7VHrD_M, METH_VARARGS },
  { "interrogate_wrapper_has_comment", &_inPU7VHjolz, METH_VARARGS },
  { "interrogate_wrapper_comment", &_inPU7VHt_JD, METH_VARARGS },
  { "interrogate_wrapper_has_return_value", &_inPU7VHwEts, METH_VARARGS },
  { "interrogate_wrapper_return_type", &_inPU7VHrJWs, METH_VARARGS },
  { "interrogate_wrapper_caller_manages_return_value", &_inPU7VHpmFD, METH_VARARGS },
  { "interrogate_wrapper_return_value_destructor", &_inPU7VHyYUX, METH_VARARGS },
  { "interrogate_wrapper_number_of_parameters", &_inPU7VH54dn, METH_VARARGS },
  { "interrogate_wrapper_parameter_type", &_inPU7VHGMpW, METH_VARARGS },
  { "interrogate_wrapper_parameter_has_name", &_inPU7VHNuBV, METH_VARARGS },
  { "interrogate_wrapper_parameter_name", &_inPU7VH9UwA, METH_VARARGS },
  { "interrogate_wrapper_parameter_is_this", &_inPU7VH3FDt, METH_VARARGS },
  { "interrogate_wrapper_has_pointer", &_inPU7VHf513, METH_VARARGS },
  { "interrogate_wrapper_pointer", &_inPU7VHsqGH, METH_VARARGS },
  { "interrogate_wrapper_unique_name", &_inPU7VH7shV, METH_VARARGS },
  { "interrogate_get_wrapper_by_unique_name", &_inPU7VHA1eF, METH_VARARGS },
  { "interrogate_make_seq_class", &_inPU7VH9tTm, METH_VARARGS },
  { "interrogate_make_seq_seq_name", &_inPU7VH776V, METH_VARARGS },
  { "interrogate_make_seq_num_name", &_inPU7VHfaH0, METH_VARARGS },
  { "interrogate_make_seq_element_name", &_inPU7VHGB9D, METH_VARARGS },
  { "interrogate_number_of_global_types", &_inPU7VHsxxs, METH_VARARGS },
  { "interrogate_get_global_type", &_inPU7VHMT0z, METH_VARARGS },
  { "interrogate_number_of_types", &_inPU7VHiW3v, METH_VARARGS },
  { "interrogate_get_type", &_inPU7VH4Px8, METH_VARARGS },
  { "interrogate_get_type_by_name", &_inPU7VHNHcs, METH_VARARGS },
  { "interrogate_get_type_by_scoped_name", &_inPU7VHqHrb, METH_VARARGS },
  { "interrogate_get_type_by_true_name", &_inPU7VHaOqq, METH_VARARGS },
  { "interrogate_type_name", &_inPU7VHqWOw, METH_VARARGS },
  { "interrogate_type_scoped_name", &_inPU7VHHu7x, METH_VARARGS },
  { "interrogate_type_true_name", &_inPU7VHwGnA, METH_VARARGS },
  { "interrogate_type_is_nested", &_inPU7VHXGxx, METH_VARARGS },
  { "interrogate_type_outer_class", &_inPU7VHj04Z, METH_VARARGS },
  { "interrogate_type_has_comment", &_inPU7VHEOv4, METH_VARARGS },
  { "interrogate_type_comment", &_inPU7VHpCqJ, METH_VARARGS },
  { "interrogate_type_has_module_name", &_inPU7VH_Pz3, METH_VARARGS },
  { "interrogate_type_module_name", &_inPU7VHt_06, METH_VARARGS },
  { "interrogate_type_has_library_name", &_inPU7VHmuPs, METH_VARARGS },
  { "interrogate_type_library_name", &_inPU7VHvM8B, METH_VARARGS },
  { "interrogate_type_is_atomic", &_inPU7VHap97, METH_VARARGS },
  { "interrogate_type_atomic_token", &_inPU7VH0o8D, METH_VARARGS },
  { "interrogate_type_is_unsigned", &_inPU7VHOoQ2, METH_VARARGS },
  { "interrogate_type_is_signed", &_inPU7VHKuFh, METH_VARARGS },
  { "interrogate_type_is_long", &_inPU7VHo5L6, METH_VARARGS },
  { "interrogate_type_is_longlong", &_inPU7VHzgKK, METH_VARARGS },
  { "interrogate_type_is_short", &_inPU7VH0FIF, METH_VARARGS },
  { "interrogate_type_is_wrapped", &_inPU7VHZqvD, METH_VARARGS },
  { "interrogate_type_is_pointer", &_inPU7VHDyRd, METH_VARARGS },
  { "interrogate_type_is_const", &_inPU7VHMnKa, METH_VARARGS },
  { "interrogate_type_is_typedef", &_inPU7VHRtji, METH_VARARGS },
  { "interrogate_type_wrapped_type", &_inPU7VHCnbQ, METH_VARARGS },
  { "interrogate_type_is_enum", &_inPU7VHdUVN, METH_VARARGS },
  { "interrogate_type_number_of_enum_values", &_inPU7VHihbt, METH_VARARGS },
  { "interrogate_type_enum_value_name", &_inPU7VHbyPY, METH_VARARGS },
  { "interrogate_type_enum_value_scoped_name", &_inPU7VHAaT6, METH_VARARGS },
  { "interrogate_type_enum_value_comment", &_inPU7VHgL9q, METH_VARARGS },
  { "interrogate_type_enum_value", &_inPU7VHWB97, METH_VARARGS },
  { "interrogate_type_is_struct", &_inPU7VHDUAl, METH_VARARGS },
  { "interrogate_type_is_class", &_inPU7VH1_Kf, METH_VARARGS },
  { "interrogate_type_is_union", &_inPU7VH98lD, METH_VARARGS },
  { "interrogate_type_is_fully_defined", &_inPU7VH9SHr, METH_VARARGS },
  { "interrogate_type_is_unpublished", &_inPU7VHdiZP, METH_VARARGS },
  { "interrogate_type_number_of_constructors", &_inPU7VHTdER, METH_VARARGS },
  { "interrogate_type_get_constructor", &_inPU7VHYO56, METH_VARARGS },
  { "interrogate_type_has_destructor", &_inPU7VHxtCG, METH_VARARGS },
  { "interrogate_type_destructor_is_inherited", &_inPU7VH_EB2, METH_VARARGS },
  { "interrogate_type_get_destructor", &_inPU7VHEG1l, METH_VARARGS },
  { "interrogate_type_number_of_elements", &_inPU7VH7tUq, METH_VARARGS },
  { "interrogate_type_get_element", &_inPU7VHyStU, METH_VARARGS },
  { "interrogate_type_number_of_methods", &_inPU7VHdM85, METH_VARARGS },
  { "interrogate_type_get_method", &_inPU7VHk_GN, METH_VARARGS },
  { "interrogate_type_number_of_make_seqs", &_inPU7VH8QjG, METH_VARARGS },
  { "interrogate_type_get_make_seq", &_inPU7VHyMtj, METH_VARARGS },
  { "interrogate_type_number_of_casts", &_inPU7VHHDtN, METH_VARARGS },
  { "interrogate_type_get_cast", &_inPU7VHHFjA, METH_VARARGS },
  { "interrogate_type_number_of_derivations", &_inPU7VH_NPR, METH_VARARGS },
  { "interrogate_type_get_derivation", &_inPU7VHcTOH, METH_VARARGS },
  { "interrogate_type_derivation_has_upcast", &_inPU7VHhdU7, METH_VARARGS },
  { "interrogate_type_get_upcast", &_inPU7VHQPxU, METH_VARARGS },
  { "interrogate_type_derivation_downcast_is_impossible", &_inPU7VHO7Pz, METH_VARARGS },
  { "interrogate_type_derivation_has_downcast", &_inPU7VHvu_E, METH_VARARGS },
  { "interrogate_type_get_downcast", &_inPU7VHxGUt, METH_VARARGS },
  { "interrogate_type_number_of_nested_types", &_inPU7VHzM1P, METH_VARARGS },
  { "interrogate_type_get_nested_type", &_inPU7VHoY5L, METH_VARARGS },
  { NULL, NULL }
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef python_simple_module = {
  PyModuleDef_HEAD_INIT,
  "dtoolconfig",
  NULL,
  -1,
  python_simple_funcs,
  NULL, NULL, NULL, NULL
};

#define INIT_FUNC PyObject *PyInit_dtoolconfig
#else
#define INIT_FUNC void initdtoolconfig
#endif

#ifdef _WIN32
extern "C" __declspec(dllexport) INIT_FUNC();
#else
extern "C" INIT_FUNC();
#endif

INIT_FUNC() {
#if PY_MAJOR_VERSION >= 3
  return PyModule_Create(&python_simple_module);
#else
  Py_InitModule("dtoolconfig", python_simple_funcs);
#endif
}

