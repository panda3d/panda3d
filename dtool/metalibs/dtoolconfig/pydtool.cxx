/*
 * This file was generated by:
 * interrogate -D EXPCL_DTOOLCONFIG= -nodb -python -promiscuous -I../../../built/include -module panda3d.interrogatedb -library interrogatedb -string -true-names -do-module -oc pydtool.cxx ../../src/interrogatedb/interrogate_interface.h ../../src/interrogatedb/interrogate_request.h
 *
 */

#include <sstream>

#include "../../src/interrogatedb/interrogate_interface.h"
#include "../../src/interrogatedb/interrogate_request.h"
#include "dtoolbase.h"

#undef _POSIX_C_SOURCE
#undef _XOPEN_SOURCE
#define PY_SSIZE_T_CLEAN 1

#if PYTHON_FRAMEWORK
  #include <Python/Python.h>
#else
  #include "Python.h"
#endif

static PyObject *_inP07yttbRf(PyObject *self, PyObject *args);
static PyObject *_inP07ytda_g(PyObject *self, PyObject *args);
static PyObject *_inP07yt4RgX(PyObject *self, PyObject *args);
static PyObject *_inP07yt3Gip(PyObject *self, PyObject *args);
static PyObject *_inP07ytRKDz(PyObject *self, PyObject *args);
static PyObject *_inP07ytgZ9N(PyObject *self, PyObject *args);
static PyObject *_inP07ytFnRZ(PyObject *self, PyObject *args);
static PyObject *_inP07ytg0Qv(PyObject *self, PyObject *args);
static PyObject *_inP07yttrqw(PyObject *self, PyObject *args);
static PyObject *_inP07ytdmpW(PyObject *self, PyObject *args);
static PyObject *_inP07ytUYgQ(PyObject *self, PyObject *args);
static PyObject *_inP07yt0k7F(PyObject *self, PyObject *args);
static PyObject *_inP07ytfIsr(PyObject *self, PyObject *args);
static PyObject *_inP07ytvysR(PyObject *self, PyObject *args);
static PyObject *_inP07ytYQ_2(PyObject *self, PyObject *args);
static PyObject *_inP07yt3kdv(PyObject *self, PyObject *args);
static PyObject *_inP07ytew01(PyObject *self, PyObject *args);
static PyObject *_inP07ytQna7(PyObject *self, PyObject *args);
static PyObject *_inP07ytkg95(PyObject *self, PyObject *args);
static PyObject *_inP07ytluRc(PyObject *self, PyObject *args);
static PyObject *_inP07yttHdM(PyObject *self, PyObject *args);
static PyObject *_inP07ytDId0(PyObject *self, PyObject *args);
static PyObject *_inP07ytHuAm(PyObject *self, PyObject *args);
static PyObject *_inP07yt_xr0(PyObject *self, PyObject *args);
static PyObject *_inP07ytH5qp(PyObject *self, PyObject *args);
static PyObject *_inP07ytU2_B(PyObject *self, PyObject *args);
static PyObject *_inP07ytHFO2(PyObject *self, PyObject *args);
static PyObject *_inP07ytcfjm(PyObject *self, PyObject *args);
static PyObject *_inP07yt3Sjw(PyObject *self, PyObject *args);
static PyObject *_inP07ytgJcX(PyObject *self, PyObject *args);
static PyObject *_inP07ytYlw6(PyObject *self, PyObject *args);
static PyObject *_inP07ytsmnz(PyObject *self, PyObject *args);
static PyObject *_inP07ytxQ10(PyObject *self, PyObject *args);
static PyObject *_inP07yt6gPB(PyObject *self, PyObject *args);
static PyObject *_inP07ytISgV(PyObject *self, PyObject *args);
static PyObject *_inP07ytH3bx(PyObject *self, PyObject *args);
static PyObject *_inP07ytzeUk(PyObject *self, PyObject *args);
static PyObject *_inP07ytUeI5(PyObject *self, PyObject *args);
static PyObject *_inP07ytuSvx(PyObject *self, PyObject *args);
static PyObject *_inP07ytwpYd(PyObject *self, PyObject *args);
static PyObject *_inP07ytOfNh(PyObject *self, PyObject *args);
static PyObject *_inP07ytf5_U(PyObject *self, PyObject *args);
static PyObject *_inP07ytL3ZB(PyObject *self, PyObject *args);
static PyObject *_inP07ytXw0I(PyObject *self, PyObject *args);
static PyObject *_inP07yt3zru(PyObject *self, PyObject *args);
static PyObject *_inP07ytRrg2(PyObject *self, PyObject *args);
static PyObject *_inP07ytEJCx(PyObject *self, PyObject *args);
static PyObject *_inP07ytWAZr(PyObject *self, PyObject *args);
static PyObject *_inP07ytrD_M(PyObject *self, PyObject *args);
static PyObject *_inP07ytjolz(PyObject *self, PyObject *args);
static PyObject *_inP07ytt_JD(PyObject *self, PyObject *args);
static PyObject *_inP07ytwEts(PyObject *self, PyObject *args);
static PyObject *_inP07ytrJWs(PyObject *self, PyObject *args);
static PyObject *_inP07ytpmFD(PyObject *self, PyObject *args);
static PyObject *_inP07ytyYUX(PyObject *self, PyObject *args);
static PyObject *_inP07yt54dn(PyObject *self, PyObject *args);
static PyObject *_inP07ytGMpW(PyObject *self, PyObject *args);
static PyObject *_inP07ytNuBV(PyObject *self, PyObject *args);
static PyObject *_inP07yt9UwA(PyObject *self, PyObject *args);
static PyObject *_inP07yt3FDt(PyObject *self, PyObject *args);
static PyObject *_inP07ytf513(PyObject *self, PyObject *args);
static PyObject *_inP07ytsqGH(PyObject *self, PyObject *args);
static PyObject *_inP07yt7shV(PyObject *self, PyObject *args);
static PyObject *_inP07ytA1eF(PyObject *self, PyObject *args);
static PyObject *_inP07yt776V(PyObject *self, PyObject *args);
static PyObject *_inP07ytryup(PyObject *self, PyObject *args);
static PyObject *_inP07ytiytI(PyObject *self, PyObject *args);
static PyObject *_inP07ytZc07(PyObject *self, PyObject *args);
static PyObject *_inP07ytfaH0(PyObject *self, PyObject *args);
static PyObject *_inP07ytGB9D(PyObject *self, PyObject *args);
static PyObject *_inP07ytsxxs(PyObject *self, PyObject *args);
static PyObject *_inP07ytMT0z(PyObject *self, PyObject *args);
static PyObject *_inP07ytiW3v(PyObject *self, PyObject *args);
static PyObject *_inP07yt4Px8(PyObject *self, PyObject *args);
static PyObject *_inP07ytNHcs(PyObject *self, PyObject *args);
static PyObject *_inP07ytqHrb(PyObject *self, PyObject *args);
static PyObject *_inP07ytaOqq(PyObject *self, PyObject *args);
static PyObject *_inP07ytpTBb(PyObject *self, PyObject *args);
static PyObject *_inP07ytqWOw(PyObject *self, PyObject *args);
static PyObject *_inP07ytHu7x(PyObject *self, PyObject *args);
static PyObject *_inP07ytwGnA(PyObject *self, PyObject *args);
static PyObject *_inP07ytXGxx(PyObject *self, PyObject *args);
static PyObject *_inP07ytj04Z(PyObject *self, PyObject *args);
static PyObject *_inP07ytEOv4(PyObject *self, PyObject *args);
static PyObject *_inP07ytpCqJ(PyObject *self, PyObject *args);
static PyObject *_inP07yt_Pz3(PyObject *self, PyObject *args);
static PyObject *_inP07ytt_06(PyObject *self, PyObject *args);
static PyObject *_inP07ytmuPs(PyObject *self, PyObject *args);
static PyObject *_inP07ytvM8B(PyObject *self, PyObject *args);
static PyObject *_inP07ytap97(PyObject *self, PyObject *args);
static PyObject *_inP07yt0o8D(PyObject *self, PyObject *args);
static PyObject *_inP07ytOoQ2(PyObject *self, PyObject *args);
static PyObject *_inP07ytKuFh(PyObject *self, PyObject *args);
static PyObject *_inP07yto5L6(PyObject *self, PyObject *args);
static PyObject *_inP07ytzgKK(PyObject *self, PyObject *args);
static PyObject *_inP07yt0FIF(PyObject *self, PyObject *args);
static PyObject *_inP07ytZqvD(PyObject *self, PyObject *args);
static PyObject *_inP07ytDyRd(PyObject *self, PyObject *args);
static PyObject *_inP07ytMnKa(PyObject *self, PyObject *args);
static PyObject *_inP07ytRtji(PyObject *self, PyObject *args);
static PyObject *_inP07ytCnbQ(PyObject *self, PyObject *args);
static PyObject *_inP07ytdUVN(PyObject *self, PyObject *args);
static PyObject *_inP07ytihbt(PyObject *self, PyObject *args);
static PyObject *_inP07ytbyPY(PyObject *self, PyObject *args);
static PyObject *_inP07ytAaT6(PyObject *self, PyObject *args);
static PyObject *_inP07ytgL9q(PyObject *self, PyObject *args);
static PyObject *_inP07ytWB97(PyObject *self, PyObject *args);
static PyObject *_inP07ytDUAl(PyObject *self, PyObject *args);
static PyObject *_inP07yt1_Kf(PyObject *self, PyObject *args);
static PyObject *_inP07yt98lD(PyObject *self, PyObject *args);
static PyObject *_inP07yt9SHr(PyObject *self, PyObject *args);
static PyObject *_inP07ytdiZP(PyObject *self, PyObject *args);
static PyObject *_inP07ytTdER(PyObject *self, PyObject *args);
static PyObject *_inP07ytYO56(PyObject *self, PyObject *args);
static PyObject *_inP07ytxtCG(PyObject *self, PyObject *args);
static PyObject *_inP07yt_EB2(PyObject *self, PyObject *args);
static PyObject *_inP07ytEG1l(PyObject *self, PyObject *args);
static PyObject *_inP07yt7tUq(PyObject *self, PyObject *args);
static PyObject *_inP07ytyStU(PyObject *self, PyObject *args);
static PyObject *_inP07ytdM85(PyObject *self, PyObject *args);
static PyObject *_inP07ytk_GN(PyObject *self, PyObject *args);
static PyObject *_inP07yt8QjG(PyObject *self, PyObject *args);
static PyObject *_inP07ytyMtj(PyObject *self, PyObject *args);
static PyObject *_inP07ytHDtN(PyObject *self, PyObject *args);
static PyObject *_inP07ytHFjA(PyObject *self, PyObject *args);
static PyObject *_inP07yt_NPR(PyObject *self, PyObject *args);
static PyObject *_inP07ytcTOH(PyObject *self, PyObject *args);
static PyObject *_inP07ythdU7(PyObject *self, PyObject *args);
static PyObject *_inP07ytQPxU(PyObject *self, PyObject *args);
static PyObject *_inP07ytO7Pz(PyObject *self, PyObject *args);
static PyObject *_inP07ytvu_E(PyObject *self, PyObject *args);
static PyObject *_inP07ytxGUt(PyObject *self, PyObject *args);
static PyObject *_inP07ytzM1P(PyObject *self, PyObject *args);
static PyObject *_inP07ytoY5L(PyObject *self, PyObject *args);
static PyObject *_inP07yte_7S(PyObject *self, PyObject *args);
static PyObject *_inP07ytw_15(PyObject *self, PyObject *args);


/*
 * Python simple wrapper for
 * void interrogate_add_search_directory(char const *dirname)
 */
static PyObject *
_inP07yttbRf(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    interrogate_add_search_directory((char const *)param0);
    return Py_BuildValue("");
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * void interrogate_add_search_path(char const *pathstring)
 */
static PyObject *
_inP07ytda_g(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    interrogate_add_search_path((char const *)param0);
    return Py_BuildValue("");
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_error_flag(void)
 */
static PyObject *
_inP07yt4RgX(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    bool return_value = interrogate_error_flag();
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_manifests(void)
 */
static PyObject *
_inP07yt3Gip(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_manifests();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ManifestIndex interrogate_get_manifest(int n)
 */
static PyObject *
_inP07ytRKDz(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    ManifestIndex return_value = interrogate_get_manifest((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ManifestIndex interrogate_get_manifest_by_name(char const *manifest_name)
 */
static PyObject *
_inP07ytgZ9N(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    ManifestIndex return_value = interrogate_get_manifest_by_name((char const *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_manifest_name(ManifestIndex manifest)
 */
static PyObject *
_inP07ytFnRZ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_manifest_name((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_manifest_definition(ManifestIndex manifest)
 */
static PyObject *
_inP07ytg0Qv(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_manifest_definition((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_manifest_has_type(ManifestIndex manifest)
 */
static PyObject *
_inP07yttrqw(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_manifest_has_type((ManifestIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_manifest_get_type(ManifestIndex manifest)
 */
static PyObject *
_inP07ytdmpW(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_manifest_get_type((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_manifest_has_getter(ManifestIndex manifest)
 */
static PyObject *
_inP07ytUYgQ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_manifest_has_getter((ManifestIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_manifest_getter(ManifestIndex manifest)
 */
static PyObject *
_inP07yt0k7F(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_manifest_getter((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_manifest_has_int_value(ManifestIndex manifest)
 */
static PyObject *
_inP07ytfIsr(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_manifest_has_int_value((ManifestIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_manifest_get_int_value(ManifestIndex manifest)
 */
static PyObject *
_inP07ytvysR(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_manifest_get_int_value((ManifestIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_element_name(ElementIndex element)
 */
static PyObject *
_inP07ytYQ_2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_element_name((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_element_scoped_name(ElementIndex element)
 */
static PyObject *
_inP07yt3kdv(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_element_scoped_name((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_element_has_comment(ElementIndex element)
 */
static PyObject *
_inP07ytew01(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_element_has_comment((ElementIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_element_comment(ElementIndex element)
 */
static PyObject *
_inP07ytQna7(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_element_comment((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ElementIndex interrogate_get_element_by_name(char const *element_name)
 */
static PyObject *
_inP07ytkg95(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    ElementIndex return_value = interrogate_get_element_by_name((char const *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ElementIndex interrogate_get_element_by_scoped_name(char const *element_name)
 */
static PyObject *
_inP07ytluRc(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    ElementIndex return_value = interrogate_get_element_by_scoped_name((char const *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_element_type(ElementIndex element)
 */
static PyObject *
_inP07yttHdM(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_element_type((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_element_has_getter(ElementIndex element)
 */
static PyObject *
_inP07ytDId0(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_element_has_getter((ElementIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_element_getter(ElementIndex element)
 */
static PyObject *
_inP07ytHuAm(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_element_getter((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_element_has_setter(ElementIndex element)
 */
static PyObject *
_inP07yt_xr0(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_element_has_setter((ElementIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_element_setter(ElementIndex element)
 */
static PyObject *
_inP07ytH5qp(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_element_setter((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_globals(void)
 */
static PyObject *
_inP07ytU2_B(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_globals();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ElementIndex interrogate_get_global(int n)
 */
static PyObject *
_inP07ytHFO2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    ElementIndex return_value = interrogate_get_global((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_global_functions(void)
 */
static PyObject *
_inP07ytcfjm(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_global_functions();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_get_global_function(int n)
 */
static PyObject *
_inP07yt3Sjw(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_get_global_function((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_functions(void)
 */
static PyObject *
_inP07ytgJcX(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_functions();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_get_function(int n)
 */
static PyObject *
_inP07ytYlw6(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_get_function((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_name(FunctionIndex function)
 */
static PyObject *
_inP07ytsmnz(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_name((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_scoped_name(FunctionIndex function)
 */
static PyObject *
_inP07ytxQ10(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_scoped_name((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_has_comment(FunctionIndex function)
 */
static PyObject *
_inP07yt6gPB(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_has_comment((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_comment(FunctionIndex function)
 */
static PyObject *
_inP07ytISgV(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_comment((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_prototype(FunctionIndex function)
 */
static PyObject *
_inP07ytH3bx(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_prototype((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_is_method(FunctionIndex function)
 */
static PyObject *
_inP07ytzeUk(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_is_method((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_function_class(FunctionIndex function)
 */
static PyObject *
_inP07ytUeI5(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_function_class((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_has_module_name(FunctionIndex function)
 */
static PyObject *
_inP07ytuSvx(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_has_module_name((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_module_name(FunctionIndex function)
 */
static PyObject *
_inP07ytwpYd(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_module_name((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_has_library_name(FunctionIndex function)
 */
static PyObject *
_inP07ytOfNh(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_has_library_name((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_function_library_name(FunctionIndex function)
 */
static PyObject *
_inP07ytf5_U(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_library_name((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_function_is_virtual(FunctionIndex function)
 */
static PyObject *
_inP07ytL3ZB(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_is_virtual((FunctionIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_function_number_of_c_wrappers(FunctionIndex function)
 */
static PyObject *
_inP07ytXw0I(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_function_number_of_c_wrappers((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionWrapperIndex interrogate_function_c_wrapper(FunctionIndex function, int n)
 */
static PyObject *
_inP07yt3zru(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionWrapperIndex return_value = interrogate_function_c_wrapper((FunctionIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_function_number_of_python_wrappers(FunctionIndex function)
 */
static PyObject *
_inP07ytRrg2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_function_number_of_python_wrappers((FunctionIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionWrapperIndex interrogate_function_python_wrapper(FunctionIndex function, int n)
 */
static PyObject *
_inP07ytEJCx(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionWrapperIndex return_value = interrogate_function_python_wrapper((FunctionIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_wrapper_name(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytWAZr(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_wrapper_name((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_is_callable_by_name(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytrD_M(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_is_callable_by_name((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_has_comment(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytjolz(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_has_comment((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_wrapper_comment(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytt_JD(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_wrapper_comment((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_has_return_value(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytwEts(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_has_return_value((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_wrapper_return_type(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytrJWs(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_wrapper_return_type((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_caller_manages_return_value(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytpmFD(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_caller_manages_return_value((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_wrapper_return_value_destructor(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytyYUX(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_wrapper_return_value_destructor((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_wrapper_number_of_parameters(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07yt54dn(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_wrapper_number_of_parameters((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_wrapper_parameter_type(FunctionWrapperIndex wrapper, int n)
 */
static PyObject *
_inP07ytGMpW(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    TypeIndex return_value = interrogate_wrapper_parameter_type((FunctionWrapperIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_parameter_has_name(FunctionWrapperIndex wrapper, int n)
 */
static PyObject *
_inP07ytNuBV(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_wrapper_parameter_has_name((FunctionWrapperIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_wrapper_parameter_name(FunctionWrapperIndex wrapper, int n)
 */
static PyObject *
_inP07yt9UwA(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_wrapper_parameter_name((FunctionWrapperIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_parameter_is_this(FunctionWrapperIndex wrapper, int n)
 */
static PyObject *
_inP07yt3FDt(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_wrapper_parameter_is_this((FunctionWrapperIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_wrapper_has_pointer(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytf513(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_has_pointer((FunctionWrapperIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * void *interrogate_wrapper_pointer(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07ytsqGH(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    interrogate_wrapper_pointer((FunctionWrapperIndex)param0);
    return Py_BuildValue("");
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_wrapper_unique_name(FunctionWrapperIndex wrapper)
 */
static PyObject *
_inP07yt7shV(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_wrapper_unique_name((FunctionWrapperIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionWrapperIndex interrogate_get_wrapper_by_unique_name(char const *unique_name)
 */
static PyObject *
_inP07ytA1eF(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    FunctionWrapperIndex return_value = interrogate_get_wrapper_by_unique_name((char const *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_make_seq_seq_name(MakeSeqIndex make_seq)
 */
static PyObject *
_inP07yt776V(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_make_seq_seq_name((MakeSeqIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_make_seq_scoped_name(MakeSeqIndex make_seq)
 */
static PyObject *
_inP07ytryup(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_make_seq_scoped_name((MakeSeqIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_make_seq_has_comment(ElementIndex element)
 */
static PyObject *
_inP07ytiytI(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_make_seq_has_comment((ElementIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_make_seq_comment(ElementIndex element)
 */
static PyObject *
_inP07ytZc07(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_make_seq_comment((ElementIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_make_seq_num_name(MakeSeqIndex make_seq)
 */
static PyObject *
_inP07ytfaH0(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_make_seq_num_name((MakeSeqIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_make_seq_element_name(MakeSeqIndex make_seq)
 */
static PyObject *
_inP07ytGB9D(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_make_seq_element_name((MakeSeqIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_global_types(void)
 */
static PyObject *
_inP07ytsxxs(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_global_types();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_global_type(int n)
 */
static PyObject *
_inP07ytMT0z(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_get_global_type((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_number_of_types(void)
 */
static PyObject *
_inP07ytiW3v(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_types();
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_type(int n)
 */
static PyObject *
_inP07yt4Px8(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_get_type((int)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_type_by_name(char const *type_name)
 */
static PyObject *
_inP07ytNHcs(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    TypeIndex return_value = interrogate_get_type_by_name((char const *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_type_by_scoped_name(char const *type_name)
 */
static PyObject *
_inP07ytqHrb(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    TypeIndex return_value = interrogate_get_type_by_scoped_name((char const *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_get_type_by_true_name(char const *type_name)
 */
static PyObject *
_inP07ytaOqq(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    TypeIndex return_value = interrogate_get_type_by_true_name((char const *)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_global(TypeIndex type)
 */
static PyObject *
_inP07ytpTBb(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_global((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_name(TypeIndex type)
 */
static PyObject *
_inP07ytqWOw(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_scoped_name(TypeIndex type)
 */
static PyObject *
_inP07ytHu7x(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_scoped_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_true_name(TypeIndex type)
 */
static PyObject *
_inP07ytwGnA(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_true_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_nested(TypeIndex type)
 */
static PyObject *
_inP07ytXGxx(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_nested((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_type_outer_class(TypeIndex type)
 */
static PyObject *
_inP07ytj04Z(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_type_outer_class((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_has_comment(TypeIndex type)
 */
static PyObject *
_inP07ytEOv4(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_comment((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_comment(TypeIndex type)
 */
static PyObject *
_inP07ytpCqJ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_comment((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_has_module_name(TypeIndex type)
 */
static PyObject *
_inP07yt_Pz3(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_module_name((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_module_name(TypeIndex type)
 */
static PyObject *
_inP07ytt_06(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_module_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_has_library_name(TypeIndex type)
 */
static PyObject *
_inP07ytmuPs(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_library_name((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_library_name(TypeIndex type)
 */
static PyObject *
_inP07ytvM8B(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_library_name((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_atomic(TypeIndex type)
 */
static PyObject *
_inP07ytap97(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_atomic((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * AtomicToken interrogate_type_atomic_token(TypeIndex type)
 */
static PyObject *
_inP07yt0o8D(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    AtomicToken return_value = interrogate_type_atomic_token((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_unsigned(TypeIndex type)
 */
static PyObject *
_inP07ytOoQ2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_unsigned((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_signed(TypeIndex type)
 */
static PyObject *
_inP07ytKuFh(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_signed((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_long(TypeIndex type)
 */
static PyObject *
_inP07yto5L6(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_long((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_longlong(TypeIndex type)
 */
static PyObject *
_inP07ytzgKK(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_longlong((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_short(TypeIndex type)
 */
static PyObject *
_inP07yt0FIF(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_short((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_wrapped(TypeIndex type)
 */
static PyObject *
_inP07ytZqvD(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_wrapped((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_pointer(TypeIndex type)
 */
static PyObject *
_inP07ytDyRd(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_pointer((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_const(TypeIndex type)
 */
static PyObject *
_inP07ytMnKa(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_const((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_typedef(TypeIndex type)
 */
static PyObject *
_inP07ytRtji(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_typedef((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_type_wrapped_type(TypeIndex type)
 */
static PyObject *
_inP07ytCnbQ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    TypeIndex return_value = interrogate_type_wrapped_type((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_enum(TypeIndex type)
 */
static PyObject *
_inP07ytdUVN(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_enum((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_enum_values(TypeIndex type)
 */
static PyObject *
_inP07ytihbt(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_enum_values((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_enum_value_name(TypeIndex type, int n)
 */
static PyObject *
_inP07ytbyPY(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_type_enum_value_name((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_enum_value_scoped_name(TypeIndex type, int n)
 */
static PyObject *
_inP07ytAaT6(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_type_enum_value_scoped_name((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * char const *interrogate_type_enum_value_comment(TypeIndex type, int n)
 */
static PyObject *
_inP07ytgL9q(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_type_enum_value_comment((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(return_value);
#else
    return PyString_FromString(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_enum_value(TypeIndex type, int n)
 */
static PyObject *
_inP07ytWB97(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_enum_value((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_struct(TypeIndex type)
 */
static PyObject *
_inP07ytDUAl(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_struct((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_class(TypeIndex type)
 */
static PyObject *
_inP07yt1_Kf(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_class((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_union(TypeIndex type)
 */
static PyObject *
_inP07yt98lD(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_union((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_fully_defined(TypeIndex type)
 */
static PyObject *
_inP07yt9SHr(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_fully_defined((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_is_unpublished(TypeIndex type)
 */
static PyObject *
_inP07ytdiZP(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_unpublished((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_constructors(TypeIndex type)
 */
static PyObject *
_inP07ytTdER(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_constructors((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_constructor(TypeIndex type, int n)
 */
static PyObject *
_inP07ytYO56(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_constructor((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_has_destructor(TypeIndex type)
 */
static PyObject *
_inP07ytxtCG(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_destructor((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_destructor_is_inherited(TypeIndex type)
 */
static PyObject *
_inP07yt_EB2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_destructor_is_inherited((TypeIndex)param0);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_destructor(TypeIndex type)
 */
static PyObject *
_inP07ytEG1l(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    FunctionIndex return_value = interrogate_type_get_destructor((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_elements(TypeIndex type)
 */
static PyObject *
_inP07yt7tUq(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_elements((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * ElementIndex interrogate_type_get_element(TypeIndex type, int n)
 */
static PyObject *
_inP07ytyStU(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    ElementIndex return_value = interrogate_type_get_element((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_methods(TypeIndex type)
 */
static PyObject *
_inP07ytdM85(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_methods((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_method(TypeIndex type, int n)
 */
static PyObject *
_inP07ytk_GN(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_method((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_make_seqs(TypeIndex type)
 */
static PyObject *
_inP07yt8QjG(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_make_seqs((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * MakeSeqIndex interrogate_type_get_make_seq(TypeIndex type, int n)
 */
static PyObject *
_inP07ytyMtj(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    MakeSeqIndex return_value = interrogate_type_get_make_seq((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_casts(TypeIndex type)
 */
static PyObject *
_inP07ytHDtN(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_casts((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_cast(TypeIndex type, int n)
 */
static PyObject *
_inP07ytHFjA(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_cast((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_derivations(TypeIndex type)
 */
static PyObject *
_inP07yt_NPR(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_derivations((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_type_get_derivation(TypeIndex type, int n)
 */
static PyObject *
_inP07ytcTOH(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    TypeIndex return_value = interrogate_type_get_derivation((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_derivation_has_upcast(TypeIndex type, int n)
 */
static PyObject *
_inP07ythdU7(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_type_derivation_has_upcast((TypeIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_upcast(TypeIndex type, int n)
 */
static PyObject *
_inP07ytQPxU(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_upcast((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_derivation_downcast_is_impossible(TypeIndex type, int n)
 */
static PyObject *
_inP07ytO7Pz(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_type_derivation_downcast_is_impossible((TypeIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * bool interrogate_type_derivation_has_downcast(TypeIndex type, int n)
 */
static PyObject *
_inP07ytvu_E(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_type_derivation_has_downcast((TypeIndex)param0, (int)param1);
    return PyBool_FromLong(return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * FunctionIndex interrogate_type_get_downcast(TypeIndex type, int n)
 */
static PyObject *
_inP07ytxGUt(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    FunctionIndex return_value = interrogate_type_get_downcast((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * int interrogate_type_number_of_nested_types(TypeIndex type)
 */
static PyObject *
_inP07ytzM1P(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_nested_types((TypeIndex)param0);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * TypeIndex interrogate_type_get_nested_type(TypeIndex type, int n)
 */
static PyObject *
_inP07ytoY5L(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    TypeIndex return_value = interrogate_type_get_nested_type((TypeIndex)param0, (int)param1);
#if PY_MAJOR_VERSION >= 3
    return PyLong_FromLong(return_value);
#else
    return PyInt_FromLong(return_value);
#endif
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * void interrogate_request_database(char const *database_filename)
 */
static PyObject *
_inP07yte_7S(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    interrogate_request_database((char const *)param0);
    return Py_BuildValue("");
  }
  return (PyObject *)NULL;
}

/*
 * Python simple wrapper for
 * void interrogate_request_module(InterrogateModuleDef *def)
 */
static PyObject *
_inP07ytw_15(PyObject *, PyObject *args) {
  Py_ssize_t param0;
  if (PyArg_ParseTuple(args, "n", &param0)) {
    interrogate_request_module((InterrogateModuleDef *)param0);
    return Py_BuildValue("");
  }
  return (PyObject *)NULL;
}


static PyMethodDef python_simple_funcs[] = {
  { "interrogate_add_search_directory", &_inP07yttbRf, METH_VARARGS },
  { "interrogate_add_search_path", &_inP07ytda_g, METH_VARARGS },
  { "interrogate_error_flag", &_inP07yt4RgX, METH_VARARGS },
  { "interrogate_number_of_manifests", &_inP07yt3Gip, METH_VARARGS },
  { "interrogate_get_manifest", &_inP07ytRKDz, METH_VARARGS },
  { "interrogate_get_manifest_by_name", &_inP07ytgZ9N, METH_VARARGS },
  { "interrogate_manifest_name", &_inP07ytFnRZ, METH_VARARGS },
  { "interrogate_manifest_definition", &_inP07ytg0Qv, METH_VARARGS },
  { "interrogate_manifest_has_type", &_inP07yttrqw, METH_VARARGS },
  { "interrogate_manifest_get_type", &_inP07ytdmpW, METH_VARARGS },
  { "interrogate_manifest_has_getter", &_inP07ytUYgQ, METH_VARARGS },
  { "interrogate_manifest_getter", &_inP07yt0k7F, METH_VARARGS },
  { "interrogate_manifest_has_int_value", &_inP07ytfIsr, METH_VARARGS },
  { "interrogate_manifest_get_int_value", &_inP07ytvysR, METH_VARARGS },
  { "interrogate_element_name", &_inP07ytYQ_2, METH_VARARGS },
  { "interrogate_element_scoped_name", &_inP07yt3kdv, METH_VARARGS },
  { "interrogate_element_has_comment", &_inP07ytew01, METH_VARARGS },
  { "interrogate_element_comment", &_inP07ytQna7, METH_VARARGS },
  { "interrogate_get_element_by_name", &_inP07ytkg95, METH_VARARGS },
  { "interrogate_get_element_by_scoped_name", &_inP07ytluRc, METH_VARARGS },
  { "interrogate_element_type", &_inP07yttHdM, METH_VARARGS },
  { "interrogate_element_has_getter", &_inP07ytDId0, METH_VARARGS },
  { "interrogate_element_getter", &_inP07ytHuAm, METH_VARARGS },
  { "interrogate_element_has_setter", &_inP07yt_xr0, METH_VARARGS },
  { "interrogate_element_setter", &_inP07ytH5qp, METH_VARARGS },
  { "interrogate_number_of_globals", &_inP07ytU2_B, METH_VARARGS },
  { "interrogate_get_global", &_inP07ytHFO2, METH_VARARGS },
  { "interrogate_number_of_global_functions", &_inP07ytcfjm, METH_VARARGS },
  { "interrogate_get_global_function", &_inP07yt3Sjw, METH_VARARGS },
  { "interrogate_number_of_functions", &_inP07ytgJcX, METH_VARARGS },
  { "interrogate_get_function", &_inP07ytYlw6, METH_VARARGS },
  { "interrogate_function_name", &_inP07ytsmnz, METH_VARARGS },
  { "interrogate_function_scoped_name", &_inP07ytxQ10, METH_VARARGS },
  { "interrogate_function_has_comment", &_inP07yt6gPB, METH_VARARGS },
  { "interrogate_function_comment", &_inP07ytISgV, METH_VARARGS },
  { "interrogate_function_prototype", &_inP07ytH3bx, METH_VARARGS },
  { "interrogate_function_is_method", &_inP07ytzeUk, METH_VARARGS },
  { "interrogate_function_class", &_inP07ytUeI5, METH_VARARGS },
  { "interrogate_function_has_module_name", &_inP07ytuSvx, METH_VARARGS },
  { "interrogate_function_module_name", &_inP07ytwpYd, METH_VARARGS },
  { "interrogate_function_has_library_name", &_inP07ytOfNh, METH_VARARGS },
  { "interrogate_function_library_name", &_inP07ytf5_U, METH_VARARGS },
  { "interrogate_function_is_virtual", &_inP07ytL3ZB, METH_VARARGS },
  { "interrogate_function_number_of_c_wrappers", &_inP07ytXw0I, METH_VARARGS },
  { "interrogate_function_c_wrapper", &_inP07yt3zru, METH_VARARGS },
  { "interrogate_function_number_of_python_wrappers", &_inP07ytRrg2, METH_VARARGS },
  { "interrogate_function_python_wrapper", &_inP07ytEJCx, METH_VARARGS },
  { "interrogate_wrapper_name", &_inP07ytWAZr, METH_VARARGS },
  { "interrogate_wrapper_is_callable_by_name", &_inP07ytrD_M, METH_VARARGS },
  { "interrogate_wrapper_has_comment", &_inP07ytjolz, METH_VARARGS },
  { "interrogate_wrapper_comment", &_inP07ytt_JD, METH_VARARGS },
  { "interrogate_wrapper_has_return_value", &_inP07ytwEts, METH_VARARGS },
  { "interrogate_wrapper_return_type", &_inP07ytrJWs, METH_VARARGS },
  { "interrogate_wrapper_caller_manages_return_value", &_inP07ytpmFD, METH_VARARGS },
  { "interrogate_wrapper_return_value_destructor", &_inP07ytyYUX, METH_VARARGS },
  { "interrogate_wrapper_number_of_parameters", &_inP07yt54dn, METH_VARARGS },
  { "interrogate_wrapper_parameter_type", &_inP07ytGMpW, METH_VARARGS },
  { "interrogate_wrapper_parameter_has_name", &_inP07ytNuBV, METH_VARARGS },
  { "interrogate_wrapper_parameter_name", &_inP07yt9UwA, METH_VARARGS },
  { "interrogate_wrapper_parameter_is_this", &_inP07yt3FDt, METH_VARARGS },
  { "interrogate_wrapper_has_pointer", &_inP07ytf513, METH_VARARGS },
  { "interrogate_wrapper_pointer", &_inP07ytsqGH, METH_VARARGS },
  { "interrogate_wrapper_unique_name", &_inP07yt7shV, METH_VARARGS },
  { "interrogate_get_wrapper_by_unique_name", &_inP07ytA1eF, METH_VARARGS },
  { "interrogate_make_seq_seq_name", &_inP07yt776V, METH_VARARGS },
  { "interrogate_make_seq_scoped_name", &_inP07ytryup, METH_VARARGS },
  { "interrogate_make_seq_has_comment", &_inP07ytiytI, METH_VARARGS },
  { "interrogate_make_seq_comment", &_inP07ytZc07, METH_VARARGS },
  { "interrogate_make_seq_num_name", &_inP07ytfaH0, METH_VARARGS },
  { "interrogate_make_seq_element_name", &_inP07ytGB9D, METH_VARARGS },
  { "interrogate_number_of_global_types", &_inP07ytsxxs, METH_VARARGS },
  { "interrogate_get_global_type", &_inP07ytMT0z, METH_VARARGS },
  { "interrogate_number_of_types", &_inP07ytiW3v, METH_VARARGS },
  { "interrogate_get_type", &_inP07yt4Px8, METH_VARARGS },
  { "interrogate_get_type_by_name", &_inP07ytNHcs, METH_VARARGS },
  { "interrogate_get_type_by_scoped_name", &_inP07ytqHrb, METH_VARARGS },
  { "interrogate_get_type_by_true_name", &_inP07ytaOqq, METH_VARARGS },
  { "interrogate_type_is_global", &_inP07ytpTBb, METH_VARARGS },
  { "interrogate_type_name", &_inP07ytqWOw, METH_VARARGS },
  { "interrogate_type_scoped_name", &_inP07ytHu7x, METH_VARARGS },
  { "interrogate_type_true_name", &_inP07ytwGnA, METH_VARARGS },
  { "interrogate_type_is_nested", &_inP07ytXGxx, METH_VARARGS },
  { "interrogate_type_outer_class", &_inP07ytj04Z, METH_VARARGS },
  { "interrogate_type_has_comment", &_inP07ytEOv4, METH_VARARGS },
  { "interrogate_type_comment", &_inP07ytpCqJ, METH_VARARGS },
  { "interrogate_type_has_module_name", &_inP07yt_Pz3, METH_VARARGS },
  { "interrogate_type_module_name", &_inP07ytt_06, METH_VARARGS },
  { "interrogate_type_has_library_name", &_inP07ytmuPs, METH_VARARGS },
  { "interrogate_type_library_name", &_inP07ytvM8B, METH_VARARGS },
  { "interrogate_type_is_atomic", &_inP07ytap97, METH_VARARGS },
  { "interrogate_type_atomic_token", &_inP07yt0o8D, METH_VARARGS },
  { "interrogate_type_is_unsigned", &_inP07ytOoQ2, METH_VARARGS },
  { "interrogate_type_is_signed", &_inP07ytKuFh, METH_VARARGS },
  { "interrogate_type_is_long", &_inP07yto5L6, METH_VARARGS },
  { "interrogate_type_is_longlong", &_inP07ytzgKK, METH_VARARGS },
  { "interrogate_type_is_short", &_inP07yt0FIF, METH_VARARGS },
  { "interrogate_type_is_wrapped", &_inP07ytZqvD, METH_VARARGS },
  { "interrogate_type_is_pointer", &_inP07ytDyRd, METH_VARARGS },
  { "interrogate_type_is_const", &_inP07ytMnKa, METH_VARARGS },
  { "interrogate_type_is_typedef", &_inP07ytRtji, METH_VARARGS },
  { "interrogate_type_wrapped_type", &_inP07ytCnbQ, METH_VARARGS },
  { "interrogate_type_is_enum", &_inP07ytdUVN, METH_VARARGS },
  { "interrogate_type_number_of_enum_values", &_inP07ytihbt, METH_VARARGS },
  { "interrogate_type_enum_value_name", &_inP07ytbyPY, METH_VARARGS },
  { "interrogate_type_enum_value_scoped_name", &_inP07ytAaT6, METH_VARARGS },
  { "interrogate_type_enum_value_comment", &_inP07ytgL9q, METH_VARARGS },
  { "interrogate_type_enum_value", &_inP07ytWB97, METH_VARARGS },
  { "interrogate_type_is_struct", &_inP07ytDUAl, METH_VARARGS },
  { "interrogate_type_is_class", &_inP07yt1_Kf, METH_VARARGS },
  { "interrogate_type_is_union", &_inP07yt98lD, METH_VARARGS },
  { "interrogate_type_is_fully_defined", &_inP07yt9SHr, METH_VARARGS },
  { "interrogate_type_is_unpublished", &_inP07ytdiZP, METH_VARARGS },
  { "interrogate_type_number_of_constructors", &_inP07ytTdER, METH_VARARGS },
  { "interrogate_type_get_constructor", &_inP07ytYO56, METH_VARARGS },
  { "interrogate_type_has_destructor", &_inP07ytxtCG, METH_VARARGS },
  { "interrogate_type_destructor_is_inherited", &_inP07yt_EB2, METH_VARARGS },
  { "interrogate_type_get_destructor", &_inP07ytEG1l, METH_VARARGS },
  { "interrogate_type_number_of_elements", &_inP07yt7tUq, METH_VARARGS },
  { "interrogate_type_get_element", &_inP07ytyStU, METH_VARARGS },
  { "interrogate_type_number_of_methods", &_inP07ytdM85, METH_VARARGS },
  { "interrogate_type_get_method", &_inP07ytk_GN, METH_VARARGS },
  { "interrogate_type_number_of_make_seqs", &_inP07yt8QjG, METH_VARARGS },
  { "interrogate_type_get_make_seq", &_inP07ytyMtj, METH_VARARGS },
  { "interrogate_type_number_of_casts", &_inP07ytHDtN, METH_VARARGS },
  { "interrogate_type_get_cast", &_inP07ytHFjA, METH_VARARGS },
  { "interrogate_type_number_of_derivations", &_inP07yt_NPR, METH_VARARGS },
  { "interrogate_type_get_derivation", &_inP07ytcTOH, METH_VARARGS },
  { "interrogate_type_derivation_has_upcast", &_inP07ythdU7, METH_VARARGS },
  { "interrogate_type_get_upcast", &_inP07ytQPxU, METH_VARARGS },
  { "interrogate_type_derivation_downcast_is_impossible", &_inP07ytO7Pz, METH_VARARGS },
  { "interrogate_type_derivation_has_downcast", &_inP07ytvu_E, METH_VARARGS },
  { "interrogate_type_get_downcast", &_inP07ytxGUt, METH_VARARGS },
  { "interrogate_type_number_of_nested_types", &_inP07ytzM1P, METH_VARARGS },
  { "interrogate_type_get_nested_type", &_inP07ytoY5L, METH_VARARGS },
  { "interrogate_request_database", &_inP07yte_7S, METH_VARARGS },
  { "interrogate_request_module", &_inP07ytw_15, METH_VARARGS },
  { NULL, NULL }
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef python_simple_module = {
  PyModuleDef_HEAD_INIT,
  "interrogatedb",
  NULL,
  -1,
  python_simple_funcs,
  NULL, NULL, NULL, NULL
};

#define INIT_FUNC PyObject *PyInit_interrogatedb
#else
#define INIT_FUNC void initinterrogatedb
#endif

#ifdef _WIN32
extern "C" __declspec(dllexport) INIT_FUNC();
#elif __GNUC__ >= 4
extern "C" __attribute__((visibility("default"))) INIT_FUNC();
#else
extern "C" INIT_FUNC();
#endif

INIT_FUNC() {
#if PY_MAJOR_VERSION >= 3
  return PyModule_Create(&python_simple_module);
#else
  Py_InitModule("interrogatedb", python_simple_funcs);
#endif
}

