/**
 * PANDA 3D SOFTWARE
 * Copyright (c) Carnegie Mellon University.  All rights reserved.
 *
 * All use of this software is subject to the terms of the revised BSD
 * license.  You should have received a copy of this license along
 * with this source code in a file named "LICENSE."
 *
 * @file buffered_datagramreader.I
 */



////////////////////////////////////////////////////////////////////
//     Function: Buffered_DatagramReader::GetMessageInplace
//  Description: A function that will peal a core message of the input buffer
////////////////////////////////////////////////////////////////////
inline bool Buffered_DatagramReader::
GetMessageFromBuffer(Datagram &inmsg) {
  bool answer = false;
  size_t DataAvail = FastAmountBeffered();
  if (DataAvail >= sizeof(short)) {
    char *ff = FastGetMessageHead();
    unsigned short len=GetUnsignedShort(ff);
    len += sizeof(unsigned short);
    if (len <= DataAvail) {
      inmsg.assign(ff + 2, len - 2);
      _StartPos += len;
      answer = true;
    }
  }
  return answer;
}
////////////////////////////////////////////////////////////////////
//     Function: Buffered_DatagramReader::Buffered_DatagramReader
//  Description: Constructor.  Passes size up to ring buffer.
////////////////////////////////////////////////////////////////////
inline Buffered_DatagramReader::
Buffered_DatagramReader(int in_size) : RingBuffer(in_size) {
}

////////////////////////////////////////////////////////////////////
//     Function: Buffered_DatagramReader::ReSet
//  Description: Reset all read content, ie. zeroes out buffer.
//
//	         If you lose framing, this will not help.
////////////////////////////////////////////////////////////////////
inline void Buffered_DatagramReader::
ReSet(void) {
  ResetContent();
}
